///*
// * To change this license header, choose License Headers in Project Properties.
// * To change this template file, choose Tools | Templates
// * and open the template in the editor.
// */
//package RealScan;
//
//import java.awt.event.WindowAdapter;
//import javax.swing.filechooser.FileFilter;
//import java.awt.event.WindowEvent;
//import java.io.FileNotFoundException;
//import java.io.FileOutputStream;
//import java.io.IOException;
//import java.util.Vector;
//import java.util.logging.Level;
//import java.util.logging.Logger;
//import javax.swing.JFileChooser;
//import javax.swing.SwingUtilities;
//import javax.swing.JOptionPane;
//
///**
// *
// * @author wsahn
// */
//
//public class RealScanTest extends javax.swing.JFrame {
//
//    /**
//     * Creates new form RealScanTest
//     */
//    public RealScanTest() {
//        initComponents();
//
//        drawCanvas.WINDOW = true;
//        drawCanvas.setBounds(0, 0, 463, 395);
//        drawPanel.add(drawCanvas);
//
//        LTCanvas.WINDOW = true;
//        LTCanvas.setBounds(0, 0, 102, 102);
//        LICanvas.WINDOW = true;
//        LICanvas.setBounds(0, 0, 102, 102);
//        LMCanvas.WINDOW = true;
//        LMCanvas.setBounds(0, 0, 102, 102);
//        LRCanvas.WINDOW = true;
//        LRCanvas.setBounds(0, 0, 102, 102);
//        LLCanvas.WINDOW = true;
//        LLCanvas.setBounds(0, 0, 102, 102);
//        RTCanvas.WINDOW = true;
//        RTCanvas.setBounds(0, 0, 102, 102);
//        RICanvas.WINDOW = true;
//        RICanvas.setBounds(0, 0, 102, 102);
//        RMCanvas.WINDOW = true;
//        RMCanvas.setBounds(0, 0, 102, 102);
//        RRCanvas.WINDOW = true;
//        RRCanvas.setBounds(0, 0, 102, 102);
//        RLCanvas.WINDOW = true;
//        RLCanvas.setBounds(0, 0, 102, 102);
//
//        drawSegLT.add(LTCanvas);
//        drawSegLI.add(LICanvas);
//        drawSegLM.add(LMCanvas);
//        drawSegLR.add(LRCanvas);
//        drawSegLL.add(LLCanvas);
//        drawSegRT.add(RTCanvas);
//        drawSegRI.add(RICanvas);
//        drawSegRM.add(RMCanvas);
//        drawSegRR.add(RRCanvas);
//        drawSegRL.add(RLCanvas);
//
//        customXField.setText("0");
//        customYField.setText("0");
//        customWField.setText("1");
//        customHField.setText("1");
//
//        for (int i = 0; i < segFPImages.length; i++) {
//            segFPImages[i] = new segFP();
//            segFPImages[i].slapType = RealScan_JNI.RS_FGP_UNKNOWN;
//            segFPImages[i].image = null;
//            segFPImages[i].rawdata = null;
//            segFPImages[i].width = 0;
//            segFPImages[i].height = 0;
//        }
//
//        addWindowListener(new WindowAdapter()
//        {
//           public void windowClosing(WindowEvent e)
//           {
//               RealScan_JNI.RS_AbortCapture(selectDevice.getSelectedIndex());
//               RealScan_JNI.RS_ExitDevice(selectDevice.getSelectedIndex());
//               dispose();
//               System.exit(0); //calling the method is a must
//           }
//        });
//    }
//
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    @SuppressWarnings("unchecked")
//    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
//    private void initComponents() {
//
//        buttonGroup1 = new javax.swing.ButtonGroup();
//        ImageTypeGroup = new javax.swing.ButtonGroup();
//        seqModeGroup = new javax.swing.ButtonGroup();
//        drawPanel = new javax.swing.JPanel();
//        statusField = new javax.swing.JLabel();
//        devicePanel = new javax.swing.JPanel();
//        selectDevice = new javax.swing.JComboBox();
//        deviceNameField = new javax.swing.JTextField();
//        FirmwareInfoField = new javax.swing.JTextField();
//        initSDKBtn = new javax.swing.JButton();
//        initDeviceBtn = new javax.swing.JButton();
//        exitDeviceBtn = new javax.swing.JButton();
//        capturePanel = new javax.swing.JPanel();
//        selectMode = new javax.swing.JComboBox();
//        stopCaptureBtn = new javax.swing.JButton();
//        startCaptureBtn = new javax.swing.JButton();
//        takeCaptureBtn = new javax.swing.JButton();
//        takeAutoCaptureBtn = new javax.swing.JButton();
//        autoCheck = new javax.swing.JCheckBox();
//        captureSizeField = new javax.swing.JTextField();
//        selectResult = new javax.swing.JComboBox();
//        jLabel44 = new javax.swing.JLabel();
//        jLabel45 = new javax.swing.JLabel();
//        jLabel46 = new javax.swing.JLabel();
//        customXField = new javax.swing.JTextField();
//        jLabel47 = new javax.swing.JLabel();
//        customYField = new javax.swing.JTextField();
//        customWField = new javax.swing.JTextField();
//        jLabel48 = new javax.swing.JLabel();
//        customHField = new javax.swing.JTextField();
//        previewPanel = new javax.swing.JPanel();
//        directDrawBtn = new javax.swing.JRadioButton();
//        prevCallbackBtn = new javax.swing.JRadioButton();
//        advPrevCallbackBtn = new javax.swing.JRadioButton();
//        FeatureTabPanel = new javax.swing.JTabbedPane();
//        deviceTab = new javax.swing.JPanel();
//        deviceInfo = new javax.swing.JPanel();
//        jLabel1 = new javax.swing.JLabel();
//        jLabel2 = new javax.swing.JLabel();
//        jLabel3 = new javax.swing.JLabel();
//        jLabel5 = new javax.swing.JLabel();
//        HardwareInfo = new javax.swing.JTextField();
//        FirmwareInfo = new javax.swing.JTextField();
//        ModelInfo = new javax.swing.JTextField();
//        DeviceIDInfo = new javax.swing.JTextField();
//        jLabel43 = new javax.swing.JLabel();
//        SDKInfoText = new javax.swing.JTextField();
//        seltTest = new javax.swing.JPanel();
//        selectTestType = new javax.swing.JComboBox();
//        selfTestBtn = new javax.swing.JButton();
//        Misc = new javax.swing.JPanel();
//        CalibBtn = new javax.swing.JToggleButton();
//        ioTab = new javax.swing.JPanel();
//        key = new javax.swing.JPanel();
//        keyMask = new javax.swing.JComboBox();
//        keyStatusField = new javax.swing.JTextField();
//        callbackPan = new javax.swing.JPanel();
//        callbackMask = new javax.swing.JComboBox();
//        callbackPrint = new javax.swing.JTextField();
//        activeKeyBtn = new javax.swing.JButton();
//        readKeyBtn = new javax.swing.JButton();
//        modeLED = new javax.swing.JPanel();
//        selModeLED = new javax.swing.JComboBox();
//        modeLEDonBtn = new javax.swing.JButton();
//        modeLEDoffBtn = new javax.swing.JButton();
//        fingerLED = new javax.swing.JPanel();
//        selFingerLED = new javax.swing.JComboBox();
//        selLEDCol = new javax.swing.JComboBox();
//        fingerLEDonBtn = new javax.swing.JButton();
//        fingerLEDoffBtn = new javax.swing.JButton();
//        statusLED = new javax.swing.JPanel();
//        selStatusLED = new javax.swing.JComboBox();
//        statusLEDonBtn = new javax.swing.JButton();
//        statusLEDoffBtn = new javax.swing.JButton();
//        Beep = new javax.swing.JPanel();
//        selBeepType = new javax.swing.JComboBox();
//        BeepEmitBtn = new javax.swing.JButton();
//        lcd = new javax.swing.JPanel();
//        resetLDCBtn = new javax.swing.JButton();
//        displayLcdBtn = new javax.swing.JButton();
//        wav = new javax.swing.JPanel();
//        PlayBtn = new javax.swing.JButton();
//        overlayTab = new javax.swing.JPanel();
//        jPanel4 = new javax.swing.JPanel();
//        jLabel13 = new javax.swing.JLabel();
//        overlayTextX = new javax.swing.JTextField();
//        jLabel14 = new javax.swing.JLabel();
//        overlayTextY = new javax.swing.JTextField();
//        jLabel15 = new javax.swing.JLabel();
//        jLabel16 = new javax.swing.JLabel();
//        jLabel17 = new javax.swing.JLabel();
//        jLabel18 = new javax.swing.JLabel();
//        showTextBtn = new javax.swing.JButton();
//        overlayTextAlign = new javax.swing.JComboBox();
//        overlayTextColor = new javax.swing.JComboBox();
//        overlayTextSize = new javax.swing.JComboBox();
//        overlayTextCont = new javax.swing.JTextField();
//        jPanel5 = new javax.swing.JPanel();
//        jLabel19 = new javax.swing.JLabel();
//        overlayCrossX = new javax.swing.JTextField();
//        jLabel20 = new javax.swing.JLabel();
//        overlayCrossY = new javax.swing.JTextField();
//        jLabel21 = new javax.swing.JLabel();
//        overlayCrossDx = new javax.swing.JTextField();
//        jLabel22 = new javax.swing.JLabel();
//        overlayCrossDy = new javax.swing.JTextField();
//        jLabel23 = new javax.swing.JLabel();
//        jLabel24 = new javax.swing.JLabel();
//        overlayCrossWidth = new javax.swing.JTextField();
//        overlayCrossColor = new javax.swing.JComboBox();
//        showCrossBtn = new javax.swing.JButton();
//        jPanel6 = new javax.swing.JPanel();
//        jLabel25 = new javax.swing.JLabel();
//        overlayLineX1 = new javax.swing.JTextField();
//        jLabel26 = new javax.swing.JLabel();
//        overlayLineY1 = new javax.swing.JTextField();
//        jLabel27 = new javax.swing.JLabel();
//        overlayLineX2 = new javax.swing.JTextField();
//        jLabel28 = new javax.swing.JLabel();
//        overlayLineY2 = new javax.swing.JTextField();
//        jLabel29 = new javax.swing.JLabel();
//        jLabel30 = new javax.swing.JLabel();
//        overlayLineWidth = new javax.swing.JTextField();
//        overlayLineColor = new javax.swing.JComboBox();
//        showLineBtn = new javax.swing.JButton();
//        jPanel7 = new javax.swing.JPanel();
//        jLabel31 = new javax.swing.JLabel();
//        overlayQuadX1 = new javax.swing.JTextField();
//        jLabel32 = new javax.swing.JLabel();
//        overlayQuadY1 = new javax.swing.JTextField();
//        jLabel33 = new javax.swing.JLabel();
//        overlayQuadX2 = new javax.swing.JTextField();
//        jLabel34 = new javax.swing.JLabel();
//        overlayQuadY2 = new javax.swing.JTextField();
//        jLabel35 = new javax.swing.JLabel();
//        overlayQuadX3 = new javax.swing.JTextField();
//        jLabel37 = new javax.swing.JLabel();
//        overlayQuadY3 = new javax.swing.JTextField();
//        jLabel38 = new javax.swing.JLabel();
//        overlayQuadX4 = new javax.swing.JTextField();
//        jLabel39 = new javax.swing.JLabel();
//        overlayQuadY4 = new javax.swing.JTextField();
//        jLabel40 = new javax.swing.JLabel();
//        overlayQuadWidth = new javax.swing.JTextField();
//        jLabel41 = new javax.swing.JLabel();
//        overlayQuadColor = new javax.swing.JComboBox();
//        showQuadBtn = new javax.swing.JButton();
//        HideOverlayBtn = new javax.swing.JButton();
//        ShowAllOverlayBtn = new javax.swing.JButton();
//        ClearOverlayBtn = new javax.swing.JButton();
//        optionsTab = new javax.swing.JPanel();
//        jPanel1 = new javax.swing.JPanel();
//        jLabel6 = new javax.swing.JLabel();
//        jLabel7 = new javax.swing.JLabel();
//        jLabel8 = new javax.swing.JLabel();
//        rollTimeoutVal = new javax.swing.JTextField();
//        rollDirectionOpt = new javax.swing.JComboBox();
//        rollProfileOpt = new javax.swing.JComboBox();
//        GetRollCaptOptionBtn = new javax.swing.JButton();
//        setRollCaptOptionBtn = new javax.swing.JButton();
//        jPanel2 = new javax.swing.JPanel();
//        jLabel10 = new javax.swing.JLabel();
//        sensitivity = new javax.swing.JComboBox();
//        GetCaptOptionBtn = new javax.swing.JButton();
//        SetCaptOptionBtn = new javax.swing.JButton();
//        AutoCalibCheck = new javax.swing.JCheckBox();
//        AdvContrastCheck = new javax.swing.JCheckBox();
//        jLabel12 = new javax.swing.JLabel();
//        postProcNoiseCheck = new javax.swing.JCheckBox();
//        postProcContrastCheck = new javax.swing.JCheckBox();
//        reductionLevel = new javax.swing.JTextField();
//        jPanel3 = new javax.swing.JPanel();
//        jLabel9 = new javax.swing.JLabel();
//        LFDLevel = new javax.swing.JComboBox();
//        GetLFDlevelBtn = new javax.swing.JButton();
//        setLFDlevelBtn = new javax.swing.JButton();
//        jPanel15 = new javax.swing.JPanel();
//        jLabel49 = new javax.swing.JLabel();
//        jTextField1 = new javax.swing.JTextField();
//        btnBitmapType = new javax.swing.JRadioButton();
//        btnWSQType = new javax.swing.JRadioButton();
//        callbackOptTab = new javax.swing.JPanel();
//        jPanel8 = new javax.swing.JPanel();
//        jPanel9 = new javax.swing.JPanel();
//        label1 = new java.awt.Label();
//        selMinFingerCount = new javax.swing.JComboBox();
//        chkMissingFingerType = new javax.swing.JCheckBox();
//        jPanel10 = new javax.swing.JPanel();
//        customSegCheck = new javax.swing.JCheckBox();
//        jLabel4 = new javax.swing.JLabel();
//        customSegWidth = new javax.swing.JTextField();
//        jLabel42 = new javax.swing.JLabel();
//        customSegHeight = new javax.swing.JTextField();
//        jPanel12 = new javax.swing.JPanel();
//        leftFingersList = new javax.swing.JPanel();
//        ctLeftLittle = new javax.swing.JCheckBox();
//        ctLeftRing = new javax.swing.JCheckBox();
//        ctLeftMiddle = new javax.swing.JCheckBox();
//        ctLeftIndex = new javax.swing.JCheckBox();
//        rightFingersList = new javax.swing.JPanel();
//        ctRightIndex = new javax.swing.JCheckBox();
//        ctRightMiddle = new javax.swing.JCheckBox();
//        ctRightRing = new javax.swing.JCheckBox();
//        ctRightLittle = new javax.swing.JCheckBox();
//        jPanel11 = new javax.swing.JPanel();
//        jPanel13 = new javax.swing.JPanel();
//        selCaptDir = new javax.swing.JComboBox();
//        seqCheckPane = new javax.swing.JPanel();
//        jScrollPane1 = new javax.swing.JScrollPane();
//        seqTargetList = new javax.swing.JList();
//        jPanel14 = new javax.swing.JPanel();
//        jLabel36 = new javax.swing.JLabel();
//        btnStartSeqCheck = new javax.swing.JButton();
//        jPanel22 = new javax.swing.JPanel();
//        drawSegLT = new javax.swing.JPanel();
//        drawSegLI = new javax.swing.JPanel();
//        drawSegLM = new javax.swing.JPanel();
//        drawSegLR = new javax.swing.JPanel();
//        drawSegLL = new javax.swing.JPanel();
//        jPanel17 = new javax.swing.JPanel();
//        drawSegRT = new javax.swing.JPanel();
//        drawSegRI = new javax.swing.JPanel();
//        drawSegRM = new javax.swing.JPanel();
//        drawSegRR = new javax.swing.JPanel();
//        drawSegRL = new javax.swing.JPanel();
//        captureStatus = new javax.swing.JLabel();
//        jLabel11 = new javax.swing.JLabel();
//
//        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
//
//        drawPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
//        drawPanel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
//
//        javax.swing.GroupLayout drawPanelLayout = new javax.swing.GroupLayout(drawPanel);
//        drawPanel.setLayout(drawPanelLayout);
//        drawPanelLayout.setHorizontalGroup(
//            drawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 461, Short.MAX_VALUE)
//        );
//        drawPanelLayout.setVerticalGroup(
//            drawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 393, Short.MAX_VALUE)
//        );
//
//        statusField.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
//        statusField.setForeground(new java.awt.Color(102, 102, 102));
//        statusField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
//        statusField.setText("Status");
//        statusField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
//
//        devicePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Device"));
//        devicePanel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
//
//        selectDevice.setToolTipText("");
//        selectDevice.setBorder(null);
//        selectDevice.setName("deviceIndex"); // NOI18N
//        selectDevice.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                selectDeviceActionPerformed(evt);
//            }
//        });
//
//        deviceNameField.setFont(new java.awt.Font("굴림", 0, 10)); // NOI18N
//        deviceNameField.setText("-");
//        deviceNameField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
//        deviceNameField.setName("deviceName"); // NOI18N
//
//        FirmwareInfoField.setFont(new java.awt.Font("굴림", 0, 10)); // NOI18N
//        FirmwareInfoField.setText("-");
//        FirmwareInfoField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
//        FirmwareInfoField.setName("deviceInfo"); // NOI18N
//
//        initSDKBtn.setBorder(null);
//        initSDKBtn.setLabel("Init SDK");
//        initSDKBtn.setName("initSDKButton"); // NOI18N
//        initSDKBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                initSDKBtnActionPerformed(evt);
//            }
//        });
//
//        initDeviceBtn.setBorder(null);
//        initDeviceBtn.setLabel("Init Device");
//        initDeviceBtn.setName("initDeviceButton"); // NOI18N
//        initDeviceBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                initDeviceBtnActionPerformed(evt);
//            }
//        });
//
//        exitDeviceBtn.setText("Exit Device");
//        exitDeviceBtn.setName("exitDeviceButton"); // NOI18N
//        exitDeviceBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                exitDeviceBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout devicePanelLayout = new javax.swing.GroupLayout(devicePanel);
//        devicePanel.setLayout(devicePanelLayout);
//        devicePanelLayout.setHorizontalGroup(
//            devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(devicePanelLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(selectDevice, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(deviceNameField)
//                    .addComponent(FirmwareInfoField))
//                .addGap(18, 18, 18)
//                .addGroup(devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(initSDKBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(initDeviceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(exitDeviceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addContainerGap())
//        );
//        devicePanelLayout.setVerticalGroup(
//            devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(devicePanelLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                    .addComponent(selectDevice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(initSDKBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addGroup(devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                    .addComponent(deviceNameField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(initDeviceBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addGroup(devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(FirmwareInfoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(exitDeviceBtn))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        initSDKBtn.getAccessibleContext().setAccessibleName("Init_SDK");
//        initDeviceBtn.getAccessibleContext().setAccessibleName("Init_Device");
//
//        capturePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Capture"));
//        capturePanel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
//
//        selectMode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disabled", "Roll", "Flat One", "Flat Two", "Flat Four(Left)", "Flat Four(Right)", "Palm(Left)", "Palm(Right)", "Flat One(Ex)", "Flat Two(Ex)", "Side Palm(Left)", "Side Palm(Right)", "Writer's Palm(Left)", "Writer's Palm(Right)", "Custom(Flat)" }));
//        selectMode.setName("captureModes"); // NOI18N
//        selectMode.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                selectModeActionPerformed(evt);
//            }
//        });
//
//        stopCaptureBtn.setText("Stop");
//        stopCaptureBtn.setName("stopButton"); // NOI18N
//        stopCaptureBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                stopCaptureBtnActionPerformed(evt);
//            }
//        });
//
//        startCaptureBtn.setText("Start");
//        startCaptureBtn.setName("startButton"); // NOI18N
//        startCaptureBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                startCaptureBtnActionPerformed(evt);
//            }
//        });
//
//        takeCaptureBtn.setText("Take");
//        takeCaptureBtn.setName("takeButton"); // NOI18N
//        takeCaptureBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                takeCaptureBtnActionPerformed(evt);
//            }
//        });
//
//        takeAutoCaptureBtn.setText("Take Auto");
//        takeAutoCaptureBtn.setName("takeAutoButton"); // NOI18N
//        takeAutoCaptureBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                takeAutoCaptureBtnActionPerformed(evt);
//            }
//        });
//
//        autoCheck.setText("Auto");
//
//        captureSizeField.setFont(new java.awt.Font("굴림", 0, 10)); // NOI18N
//        captureSizeField.setText("x");
//        captureSizeField.setToolTipText("");
//        captureSizeField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
//        captureSizeField.setName("resolutionDisplay"); // NOI18N
//
//        selectResult.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Save Image", "Segment", "Save Segment Image", "Sequence Check" }));
//        selectResult.setName("callbackOptions"); // NOI18N
//        selectResult.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                selectResultActionPerformed(evt);
//            }
//        });
//
//        jLabel44.setText("Custom Capt. Size");
//
//        jLabel45.setText("x : ");
//
//        jLabel46.setText("w : ");
//
//        jLabel47.setText("y :");
//
//        jLabel48.setText("h : ");
//
//        javax.swing.GroupLayout capturePanelLayout = new javax.swing.GroupLayout(capturePanel);
//        capturePanel.setLayout(capturePanelLayout);
//        capturePanelLayout.setHorizontalGroup(
//            capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(capturePanelLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addGroup(capturePanelLayout.createSequentialGroup()
//                        .addGroup(capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addComponent(selectResult, 0, 1, Short.MAX_VALUE)
//                            .addComponent(captureSizeField)
//                            .addComponent(autoCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                            .addComponent(selectMode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                        .addGap(18, 18, 18)
//                        .addGroup(capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                                    .addComponent(stopCaptureBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                    .addComponent(takeCaptureBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
//                                .addComponent(takeAutoCaptureBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
//                            .addComponent(startCaptureBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
//                    .addGroup(capturePanelLayout.createSequentialGroup()
//                        .addComponent(jLabel44)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addGroup(capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addComponent(jLabel45)
//                            .addComponent(jLabel46))
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addGroup(capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                            .addComponent(customWField, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
//                            .addComponent(customXField))
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addGroup(capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addComponent(jLabel47)
//                            .addComponent(jLabel48))
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addGroup(capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                            .addComponent(customHField, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
//                            .addComponent(customYField))
//                        .addGap(0, 0, Short.MAX_VALUE)))
//                .addContainerGap())
//        );
//        capturePanelLayout.setVerticalGroup(
//            capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(capturePanelLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addGroup(capturePanelLayout.createSequentialGroup()
//                        .addGap(29, 29, 29)
//                        .addComponent(autoCheck))
//                    .addGroup(capturePanelLayout.createSequentialGroup()
//                        .addGroup(capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                            .addComponent(selectMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                            .addComponent(startCaptureBtn))
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(stopCaptureBtn)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addGroup(capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                            .addComponent(takeCaptureBtn)
//                            .addComponent(captureSizeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addGroup(capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                            .addComponent(takeAutoCaptureBtn)
//                            .addComponent(selectResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addGroup(capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel44)
//                    .addComponent(jLabel45)
//                    .addComponent(customXField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(jLabel47)
//                    .addComponent(customYField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addGroup(capturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel46)
//                    .addComponent(customWField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(jLabel48)
//                    .addComponent(customHField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        previewPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Preview"));
//        previewPanel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
//
//        buttonGroup1.add(directDrawBtn);
//        directDrawBtn.setText("Direct");
//        directDrawBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                directDrawBtnActionPerformed(evt);
//            }
//        });
//
//        buttonGroup1.add(prevCallbackBtn);
//        prevCallbackBtn.setText("Callback");
//        prevCallbackBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                prevCallbackBtnActionPerformed(evt);
//            }
//        });
//
//        buttonGroup1.add(advPrevCallbackBtn);
//        advPrevCallbackBtn.setText("AdvCallback");
//        advPrevCallbackBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                advPrevCallbackBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout previewPanelLayout = new javax.swing.GroupLayout(previewPanel);
//        previewPanel.setLayout(previewPanelLayout);
//        previewPanelLayout.setHorizontalGroup(
//            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, previewPanelLayout.createSequentialGroup()
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addComponent(directDrawBtn)
//                .addGap(18, 18, 18)
//                .addComponent(prevCallbackBtn)
//                .addGap(18, 18, 18)
//                .addComponent(advPrevCallbackBtn)
//                .addContainerGap())
//        );
//        previewPanelLayout.setVerticalGroup(
//            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(previewPanelLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(directDrawBtn)
//                    .addComponent(prevCallbackBtn)
//                    .addComponent(advPrevCallbackBtn))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        directDrawBtn.getAccessibleContext().setAccessibleName("startPreviewToggle");
//        prevCallbackBtn.getAccessibleContext().setAccessibleName("stopPreviewToggle");
//
//        deviceInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Device Info"));
//
//        jLabel1.setText("Model");
//
//        jLabel2.setText("Firmware");
//
//        jLabel3.setText("Hardware");
//
//        jLabel5.setText("Device ID");
//
//        jLabel43.setText("SDK Info");
//
//        javax.swing.GroupLayout deviceInfoLayout = new javax.swing.GroupLayout(deviceInfo);
//        deviceInfo.setLayout(deviceInfoLayout);
//        deviceInfoLayout.setHorizontalGroup(
//            deviceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(deviceInfoLayout.createSequentialGroup()
//                .addGap(23, 23, 23)
//                .addGroup(deviceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addGroup(deviceInfoLayout.createSequentialGroup()
//                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addComponent(HardwareInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addGap(44, 44, 44))
//                    .addGroup(deviceInfoLayout.createSequentialGroup()
//                        .addComponent(jLabel43)
//                        .addGap(18, 18, 18)
//                        .addComponent(SDKInfoText, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deviceInfoLayout.createSequentialGroup()
//                        .addGroup(deviceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(deviceInfoLayout.createSequentialGroup()
//                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
//                            .addGroup(deviceInfoLayout.createSequentialGroup()
//                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                                .addGap(30, 30, 30)))
//                        .addGroup(deviceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addComponent(ModelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
//                            .addComponent(DeviceIDInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
//                        .addGap(45, 45, 45))
//                    .addGroup(deviceInfoLayout.createSequentialGroup()
//                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addComponent(FirmwareInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addGap(45, 45, 45))))
//        );
//        deviceInfoLayout.setVerticalGroup(
//            deviceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(deviceInfoLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(deviceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(ModelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(deviceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(FirmwareInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(deviceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(HardwareInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(deviceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(DeviceIDInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(deviceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel43)
//                    .addComponent(SDKInfoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(48, 48, 48))
//        );
//
//        seltTest.setBorder(javax.swing.BorderFactory.createTitledBorder("Self Test"));
//
//        selectTestType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Illumination", "Dirt" }));
//
//        selfTestBtn.setText("Run");
//        selfTestBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                selfTestBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout seltTestLayout = new javax.swing.GroupLayout(seltTest);
//        seltTest.setLayout(seltTestLayout);
//        seltTestLayout.setHorizontalGroup(
//            seltTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(seltTestLayout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(selectTestType, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addComponent(selfTestBtn)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//        seltTestLayout.setVerticalGroup(
//            seltTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(seltTestLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(seltTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(selectTestType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(selfTestBtn))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        Misc.setBorder(javax.swing.BorderFactory.createTitledBorder("Misc"));
//
//        CalibBtn.setText("Calibrate");
//        CalibBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                CalibBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout MiscLayout = new javax.swing.GroupLayout(Misc);
//        Misc.setLayout(MiscLayout);
//        MiscLayout.setHorizontalGroup(
//            MiscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(MiscLayout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(CalibBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
//                .addContainerGap())
//        );
//        MiscLayout.setVerticalGroup(
//            MiscLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(MiscLayout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(CalibBtn)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        javax.swing.GroupLayout deviceTabLayout = new javax.swing.GroupLayout(deviceTab);
//        deviceTab.setLayout(deviceTabLayout);
//        deviceTabLayout.setHorizontalGroup(
//            deviceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(deviceTabLayout.createSequentialGroup()
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addComponent(deviceInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addComponent(seltTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addComponent(Misc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(20, 20, 20))
//        );
//        deviceTabLayout.setVerticalGroup(
//            deviceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(deviceTabLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(deviceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addGroup(deviceTabLayout.createSequentialGroup()
//                        .addGroup(deviceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                            .addComponent(Misc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                            .addComponent(seltTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                        .addGap(0, 0, Short.MAX_VALUE))
//                    .addComponent(deviceInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                .addContainerGap())
//        );
//
//        FeatureTabPanel.addTab("Device", deviceTab);
//
//        key.setBorder(javax.swing.BorderFactory.createTitledBorder("Key"));
//
//        keyMask.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "up", "down", "Left", "Right", "play", "stop", "Foot", "All" }));
//
//        callbackPan.setBorder(javax.swing.BorderFactory.createTitledBorder("Callback"));
//
//        callbackMask.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Print", "Beep" }));
//
//        javax.swing.GroupLayout callbackPanLayout = new javax.swing.GroupLayout(callbackPan);
//        callbackPan.setLayout(callbackPanLayout);
//        callbackPanLayout.setHorizontalGroup(
//            callbackPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(callbackPanLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(callbackPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(callbackPrint)
//                    .addGroup(callbackPanLayout.createSequentialGroup()
//                        .addComponent(callbackMask, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addGap(0, 0, Short.MAX_VALUE)))
//                .addContainerGap())
//        );
//        callbackPanLayout.setVerticalGroup(
//            callbackPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(callbackPanLayout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(callbackMask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addComponent(callbackPrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        activeKeyBtn.setText("Activate");
//        activeKeyBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                activeKeyBtnActionPerformed(evt);
//            }
//        });
//
//        readKeyBtn.setText("Read Key");
//        readKeyBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                readKeyBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout keyLayout = new javax.swing.GroupLayout(key);
//        key.setLayout(keyLayout);
//        keyLayout.setHorizontalGroup(
//            keyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(keyLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(keyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(callbackPan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addGroup(keyLayout.createSequentialGroup()
//                        .addGroup(keyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                            .addComponent(keyStatusField)
//                            .addComponent(keyMask, 0, 91, Short.MAX_VALUE))
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                        .addGroup(keyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                            .addComponent(activeKeyBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                            .addComponent(readKeyBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
//                .addContainerGap())
//        );
//        keyLayout.setVerticalGroup(
//            keyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(keyLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(keyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(keyMask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(activeKeyBtn))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addGroup(keyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(keyStatusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(readKeyBtn))
//                .addGap(18, 18, 18)
//                .addComponent(callbackPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        modeLED.setBorder(javax.swing.BorderFactory.createTitledBorder("Mode LED"));
//
//        selModeLED.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Left", "Right", "Thumb", "Roll", "Power LED" }));
//
//        modeLEDonBtn.setText("On");
//        modeLEDonBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                modeLEDonBtnActionPerformed(evt);
//            }
//        });
//
//        modeLEDoffBtn.setText("Off");
//        modeLEDoffBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                modeLEDoffBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout modeLEDLayout = new javax.swing.GroupLayout(modeLED);
//        modeLED.setLayout(modeLEDLayout);
//        modeLEDLayout.setHorizontalGroup(
//            modeLEDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(modeLEDLayout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(selModeLED, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(modeLEDonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(modeLEDoffBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//        modeLEDLayout.setVerticalGroup(
//            modeLEDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(modeLEDLayout.createSequentialGroup()
//                .addGroup(modeLEDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(selModeLED, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(modeLEDonBtn)
//                    .addComponent(modeLEDoffBtn))
//                .addGap(0, 10, Short.MAX_VALUE))
//        );
//
//        fingerLED.setBorder(javax.swing.BorderFactory.createTitledBorder("Finger LED"));
//
//        selFingerLED.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Little(L)", "Ring(L)", "Middle(L)", "Index(L)", "Thumb(L)", "Thumb(R)", "Index(R)", "Middle(R)", "Ring(R)", "Little(R)", "Thums", "Four(L)", "Four(R)" }));
//
//        selLEDCol.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Green", "Red", "Yellow" }));
//
//        fingerLEDonBtn.setText("On");
//        fingerLEDonBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                fingerLEDonBtnActionPerformed(evt);
//            }
//        });
//
//        fingerLEDoffBtn.setText("Off");
//        fingerLEDoffBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                fingerLEDoffBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout fingerLEDLayout = new javax.swing.GroupLayout(fingerLED);
//        fingerLED.setLayout(fingerLEDLayout);
//        fingerLEDLayout.setHorizontalGroup(
//            fingerLEDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(fingerLEDLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(fingerLEDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                    .addComponent(selFingerLED, 0, 96, Short.MAX_VALUE)
//                    .addComponent(selLEDCol, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(fingerLEDonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(fingerLEDoffBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//        fingerLEDLayout.setVerticalGroup(
//            fingerLEDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(fingerLEDLayout.createSequentialGroup()
//                .addGroup(fingerLEDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(selFingerLED, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(fingerLEDonBtn)
//                    .addComponent(fingerLEDoffBtn))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(selLEDCol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(0, 0, Short.MAX_VALUE))
//        );
//
//        statusLED.setBorder(javax.swing.BorderFactory.createTitledBorder("Status LED"));
//
//        selStatusLED.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Green", "Red", "Yellow" }));
//
//        statusLEDonBtn.setText("On");
//        statusLEDonBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                statusLEDonBtnActionPerformed(evt);
//            }
//        });
//
//        statusLEDoffBtn.setText("Off");
//
//        javax.swing.GroupLayout statusLEDLayout = new javax.swing.GroupLayout(statusLED);
//        statusLED.setLayout(statusLEDLayout);
//        statusLEDLayout.setHorizontalGroup(
//            statusLEDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(statusLEDLayout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(selStatusLED, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(statusLEDonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(statusLEDoffBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//        statusLEDLayout.setVerticalGroup(
//            statusLEDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(statusLEDLayout.createSequentialGroup()
//                .addGroup(statusLEDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(selStatusLED, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(statusLEDonBtn)
//                    .addComponent(statusLEDoffBtn))
//                .addGap(0, 10, Short.MAX_VALUE))
//        );
//
//        Beep.setBorder(javax.swing.BorderFactory.createTitledBorder("Beep"));
//
//        selBeepType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Beep1", "Beep2" }));
//
//        BeepEmitBtn.setText("Emit");
//        BeepEmitBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                BeepEmitBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout BeepLayout = new javax.swing.GroupLayout(Beep);
//        Beep.setLayout(BeepLayout);
//        BeepLayout.setHorizontalGroup(
//            BeepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(BeepLayout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(selBeepType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(BeepEmitBtn))
//        );
//        BeepLayout.setVerticalGroup(
//            BeepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(BeepLayout.createSequentialGroup()
//                .addGroup(BeepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(selBeepType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(BeepEmitBtn))
//                .addGap(0, 0, Short.MAX_VALUE))
//        );
//
//        lcd.setBorder(javax.swing.BorderFactory.createTitledBorder("LCD (RS-F)"));
//
//        resetLDCBtn.setText("Reset LCD");
//        resetLDCBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                resetLDCBtnActionPerformed(evt);
//            }
//        });
//
//        displayLcdBtn.setText("Display File Data");
//        displayLcdBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                displayLcdBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout lcdLayout = new javax.swing.GroupLayout(lcd);
//        lcd.setLayout(lcdLayout);
//        lcdLayout.setHorizontalGroup(
//            lcdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(lcdLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(lcdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(resetLDCBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(displayLcdBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
//                .addContainerGap())
//        );
//        lcdLayout.setVerticalGroup(
//            lcdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(lcdLayout.createSequentialGroup()
//                .addComponent(resetLDCBtn)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(displayLcdBtn)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        wav.setBorder(javax.swing.BorderFactory.createTitledBorder("Wav"));
//
//        PlayBtn.setText("Play");
//        PlayBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                PlayBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout wavLayout = new javax.swing.GroupLayout(wav);
//        wav.setLayout(wavLayout);
//        wavLayout.setHorizontalGroup(
//            wavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, wavLayout.createSequentialGroup()
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addComponent(PlayBtn)
//                .addContainerGap())
//        );
//        wavLayout.setVerticalGroup(
//            wavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(wavLayout.createSequentialGroup()
//                .addComponent(PlayBtn)
//                .addGap(0, 10, Short.MAX_VALUE))
//        );
//
//        javax.swing.GroupLayout ioTabLayout = new javax.swing.GroupLayout(ioTab);
//        ioTab.setLayout(ioTabLayout);
//        ioTabLayout.setHorizontalGroup(
//            ioTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(ioTabLayout.createSequentialGroup()
//                .addGap(24, 24, 24)
//                .addComponent(key, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addGroup(ioTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(modeLED, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(fingerLED, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(statusLED, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addGroup(ioTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                    .addComponent(Beep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(lcd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(wav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                .addGap(27, 27, 27))
//        );
//        ioTabLayout.setVerticalGroup(
//            ioTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(ioTabLayout.createSequentialGroup()
//                .addGroup(ioTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addGroup(ioTabLayout.createSequentialGroup()
//                        .addGap(18, 18, 18)
//                        .addGroup(ioTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                            .addComponent(Beep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                            .addComponent(modeLED, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addGroup(ioTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                            .addComponent(lcd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                            .addComponent(fingerLED, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                        .addGroup(ioTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                            .addGroup(ioTabLayout.createSequentialGroup()
//                                .addGap(12, 12, 12)
//                                .addComponent(statusLED, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                            .addGroup(ioTabLayout.createSequentialGroup()
//                                .addGap(18, 18, 18)
//                                .addComponent(wav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
//                    .addGroup(ioTabLayout.createSequentialGroup()
//                        .addContainerGap()
//                        .addComponent(key, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        FeatureTabPanel.addTab("IO", ioTab);
//
//        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Text"));
//        jPanel4.setPreferredSize(new java.awt.Dimension(150, 24));
//
//        jLabel13.setText("X");
//
//        jLabel14.setText("Y");
//
//        jLabel15.setText("Align");
//
//        jLabel16.setText("Color");
//
//        jLabel17.setText("Size");
//
//        jLabel18.setText("Text");
//
//        showTextBtn.setText("Show");
//        showTextBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                showTextBtnActionPerformed(evt);
//            }
//        });
//
//        overlayTextAlign.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Left", "Center", "Right" }));
//
//        overlayTextColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Black", "Red", "Green", "Blue" }));
//
//        overlayTextSize.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "8", "10", "12", "14", "16", "18", "20", "24", "28" }));
//
//        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
//        jPanel4.setLayout(jPanel4Layout);
//        jPanel4Layout.setHorizontalGroup(
//            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel4Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addGroup(jPanel4Layout.createSequentialGroup()
//                        .addComponent(jLabel18)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addComponent(overlayTextCont))
//                    .addGroup(jPanel4Layout.createSequentialGroup()
//                        .addComponent(jLabel13)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addComponent(overlayTextX, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addComponent(jLabel14)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addComponent(overlayTextY, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addGap(0, 4, Short.MAX_VALUE))
//                    .addGroup(jPanel4Layout.createSequentialGroup()
//                        .addComponent(jLabel17)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                        .addComponent(overlayTextSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                    .addGroup(jPanel4Layout.createSequentialGroup()
//                        .addComponent(jLabel16)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                        .addComponent(overlayTextColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                    .addGroup(jPanel4Layout.createSequentialGroup()
//                        .addComponent(jLabel15)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                        .addComponent(overlayTextAlign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
//                .addContainerGap())
//            .addComponent(showTextBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//        );
//        jPanel4Layout.setVerticalGroup(
//            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel4Layout.createSequentialGroup()
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel13)
//                    .addComponent(overlayTextX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(jLabel14)
//                    .addComponent(overlayTextY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel15)
//                    .addComponent(overlayTextAlign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel16)
//                    .addComponent(overlayTextColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel17)
//                    .addComponent(overlayTextSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(jLabel18)
//                    .addComponent(overlayTextCont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addComponent(showTextBtn))
//        );
//
//        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Cross"));
//        jPanel5.setPreferredSize(new java.awt.Dimension(150, 24));
//
//        jLabel19.setText("X");
//
//        jLabel20.setText("Y");
//
//        jLabel21.setText("dX");
//
//        jLabel22.setText("dY");
//
//        jLabel23.setText("Width");
//
//        jLabel24.setText("Color");
//
//        overlayCrossColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Black", "Red", "Green", "Blue" }));
//
//        showCrossBtn.setText("Show");
//        showCrossBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                showCrossBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
//        jPanel5.setLayout(jPanel5Layout);
//        jPanel5Layout.setHorizontalGroup(
//            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel5Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(showCrossBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
//                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addComponent(jLabel23)
//                            .addComponent(jLabel24))
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addComponent(overlayCrossColor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                            .addComponent(overlayCrossWidth)))
//                    .addGroup(jPanel5Layout.createSequentialGroup()
//                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                            .addGroup(jPanel5Layout.createSequentialGroup()
//                                .addComponent(jLabel19)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                                .addComponent(overlayCrossX, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
//                            .addGroup(jPanel5Layout.createSequentialGroup()
//                                .addComponent(jLabel21)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                .addComponent(overlayCrossDx)))
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                            .addGroup(jPanel5Layout.createSequentialGroup()
//                                .addComponent(jLabel20)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                                .addComponent(overlayCrossY, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
//                            .addGroup(jPanel5Layout.createSequentialGroup()
//                                .addComponent(jLabel22)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                .addComponent(overlayCrossDy)))
//                        .addGap(0, 3, Short.MAX_VALUE)))
//                .addContainerGap())
//        );
//        jPanel5Layout.setVerticalGroup(
//            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel5Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel19)
//                    .addComponent(overlayCrossX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(jLabel20)
//                    .addComponent(overlayCrossY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel21)
//                    .addComponent(overlayCrossDx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(jLabel22)
//                    .addComponent(overlayCrossDy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel23)
//                    .addComponent(overlayCrossWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel24)
//                    .addComponent(overlayCrossColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addComponent(showCrossBtn)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Line"));
//        jPanel6.setPreferredSize(new java.awt.Dimension(150, 24));
//
//        jLabel25.setText("X1");
//
//        jLabel26.setText("Y1");
//
//        jLabel27.setText("X2");
//
//        jLabel28.setText("Y2");
//
//        jLabel29.setText("Width");
//
//        jLabel30.setText("Color");
//
//        overlayLineColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Black", "Red", "Green", "Blue" }));
//
//        showLineBtn.setText("Show");
//        showLineBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                showLineBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
//        jPanel6.setLayout(jPanel6Layout);
//        jPanel6Layout.setHorizontalGroup(
//            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel6Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(showLineBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addGroup(jPanel6Layout.createSequentialGroup()
//                        .addComponent(jLabel29)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addComponent(overlayLineWidth))
//                    .addGroup(jPanel6Layout.createSequentialGroup()
//                        .addComponent(jLabel30)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addComponent(overlayLineColor, 0, 1, Short.MAX_VALUE))
//                    .addGroup(jPanel6Layout.createSequentialGroup()
//                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(jPanel6Layout.createSequentialGroup()
//                                .addComponent(jLabel25)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                                .addComponent(overlayLineX1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
//                            .addGroup(jPanel6Layout.createSequentialGroup()
//                                .addComponent(jLabel27)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                                .addComponent(overlayLineX2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                            .addGroup(jPanel6Layout.createSequentialGroup()
//                                .addComponent(jLabel26)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                                .addComponent(overlayLineY1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
//                            .addGroup(jPanel6Layout.createSequentialGroup()
//                                .addComponent(jLabel28)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                                .addComponent(overlayLineY2)))
//                        .addGap(0, 0, Short.MAX_VALUE)))
//                .addContainerGap())
//        );
//        jPanel6Layout.setVerticalGroup(
//            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel6Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel25)
//                    .addComponent(overlayLineX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(jLabel26)
//                    .addComponent(overlayLineY1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(jLabel27)
//                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                        .addComponent(overlayLineX2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addComponent(jLabel28)
//                        .addComponent(overlayLineY2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
//                .addGap(18, 18, 18)
//                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel29)
//                    .addComponent(overlayLineWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel30)
//                    .addComponent(overlayLineColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addComponent(showLineBtn)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Quadrangle"));
//        jPanel7.setPreferredSize(new java.awt.Dimension(150, 24));
//
//        jLabel31.setText("X1");
//
//        jLabel32.setText("Y1");
//
//        jLabel33.setText("X2");
//
//        jLabel34.setText("Y2");
//
//        jLabel35.setText("X3");
//
//        jLabel37.setText("Y3");
//
//        jLabel38.setText("X4");
//
//        jLabel39.setText("Y4");
//
//        jLabel40.setText("Width");
//
//        jLabel41.setText("Color");
//
//        overlayQuadColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Black", "Red", "Green", "Blue" }));
//
//        showQuadBtn.setText("Show");
//        showQuadBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                showQuadBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
//        jPanel7.setLayout(jPanel7Layout);
//        jPanel7Layout.setHorizontalGroup(
//            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel7Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                    .addGroup(jPanel7Layout.createSequentialGroup()
//                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                            .addGroup(jPanel7Layout.createSequentialGroup()
//                                .addComponent(jLabel38)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                .addComponent(overlayQuadX4))
//                            .addGroup(jPanel7Layout.createSequentialGroup()
//                                .addComponent(jLabel35)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                .addComponent(overlayQuadX3))
//                            .addGroup(jPanel7Layout.createSequentialGroup()
//                                .addComponent(jLabel31)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                .addComponent(overlayQuadX1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
//                            .addGroup(jPanel7Layout.createSequentialGroup()
//                                .addComponent(jLabel33)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                .addComponent(overlayQuadX2)))
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                            .addGroup(jPanel7Layout.createSequentialGroup()
//                                .addComponent(jLabel32)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                .addComponent(overlayQuadY1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
//                            .addGroup(jPanel7Layout.createSequentialGroup()
//                                .addComponent(jLabel34)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                .addComponent(overlayQuadY2))
//                            .addGroup(jPanel7Layout.createSequentialGroup()
//                                .addComponent(jLabel37)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                .addComponent(overlayQuadY3))
//                            .addGroup(jPanel7Layout.createSequentialGroup()
//                                .addComponent(jLabel39)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                .addComponent(overlayQuadY4))))
//                    .addGroup(jPanel7Layout.createSequentialGroup()
//                        .addComponent(jLabel40)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(overlayQuadWidth))
//                    .addGroup(jPanel7Layout.createSequentialGroup()
//                        .addComponent(jLabel41)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(overlayQuadColor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                    .addComponent(showQuadBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                .addContainerGap(16, Short.MAX_VALUE))
//        );
//        jPanel7Layout.setVerticalGroup(
//            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel7Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel31)
//                    .addComponent(overlayQuadX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(jLabel32)
//                    .addComponent(overlayQuadY1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(jLabel33)
//                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                        .addComponent(overlayQuadX2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addComponent(jLabel34)
//                        .addComponent(overlayQuadY2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(jLabel35)
//                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                        .addComponent(overlayQuadX3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addComponent(jLabel37)
//                        .addComponent(overlayQuadY3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel38)
//                    .addComponent(overlayQuadX4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(jLabel39)
//                    .addComponent(overlayQuadY4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(jLabel40)
//                    .addComponent(overlayQuadWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel41)
//                    .addComponent(overlayQuadColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addGap(18, 18, 18)
//                .addComponent(showQuadBtn)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        HideOverlayBtn.setText("Hide All");
//        HideOverlayBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                HideOverlayBtnActionPerformed(evt);
//            }
//        });
//
//        ShowAllOverlayBtn.setText("Show All");
//        ShowAllOverlayBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                ShowAllOverlayBtnActionPerformed(evt);
//            }
//        });
//
//        ClearOverlayBtn.setText("Clear All");
//        ClearOverlayBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                ClearOverlayBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout overlayTabLayout = new javax.swing.GroupLayout(overlayTab);
//        overlayTab.setLayout(overlayTabLayout);
//        overlayTabLayout.setHorizontalGroup(
//            overlayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(overlayTabLayout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addGroup(overlayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                    .addComponent(ShowAllOverlayBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(HideOverlayBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(ClearOverlayBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//        overlayTabLayout.setVerticalGroup(
//            overlayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(overlayTabLayout.createSequentialGroup()
//                .addGroup(overlayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
//                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
//                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
//                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
//                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, overlayTabLayout.createSequentialGroup()
//                        .addGap(10, 10, 10)
//                        .addComponent(HideOverlayBtn)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addComponent(ShowAllOverlayBtn)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addComponent(ClearOverlayBtn))
//                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        FeatureTabPanel.addTab("Overlay", overlayTab);
//
//        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Roll Capture Option"));
//
//        jLabel6.setText("Profile");
//
//        jLabel7.setText("Direction");
//
//        jLabel8.setText("Timeout(ms)");
//
//        rollDirectionOpt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "L to R", "R to L", "Automatic", "Auto M" }));
//
//        rollProfileOpt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Low", "Normal", "High" }));
//
//        GetRollCaptOptionBtn.setText("Read");
//        GetRollCaptOptionBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                GetRollCaptOptionBtnActionPerformed(evt);
//            }
//        });
//
//        setRollCaptOptionBtn.setText("Write");
//        setRollCaptOptionBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                setRollCaptOptionBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
//        jPanel1.setLayout(jPanel1Layout);
//        jPanel1Layout.setHorizontalGroup(
//            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel1Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addGroup(jPanel1Layout.createSequentialGroup()
//                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addComponent(jLabel6)
//                            .addComponent(jLabel7))
//                        .addGap(43, 43, 43)
//                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
//                            .addComponent(rollDirectionOpt, 0, 94, Short.MAX_VALUE)
//                            .addComponent(rollProfileOpt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                        .addGap(18, 18, 18)
//                        .addComponent(GetRollCaptOptionBtn)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                        .addComponent(setRollCaptOptionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
//                    .addGroup(jPanel1Layout.createSequentialGroup()
//                        .addComponent(jLabel8)
//                        .addGap(18, 18, 18)
//                        .addComponent(rollTimeoutVal, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addGap(0, 0, Short.MAX_VALUE)))
//                .addContainerGap())
//        );
//        jPanel1Layout.setVerticalGroup(
//            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel1Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel6)
//                    .addComponent(rollProfileOpt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(GetRollCaptOptionBtn)
//                    .addComponent(setRollCaptOptionBtn))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel7)
//                    .addComponent(rollDirectionOpt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(jLabel8)
//                    .addComponent(rollTimeoutVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Other Capture Options"));
//
//        jLabel10.setText("Auto Capture");
//
//        sensitivity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "High", "Higher", "Strict", "Disabled" }));
//
//        GetCaptOptionBtn.setText("Read");
//        GetCaptOptionBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                GetCaptOptionBtnActionPerformed(evt);
//            }
//        });
//
//        SetCaptOptionBtn.setText("Write");
//        SetCaptOptionBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                SetCaptOptionBtnActionPerformed(evt);
//            }
//        });
//
//        AutoCalibCheck.setText("Auto Calibration");
//
//        AdvContrastCheck.setText("Advanced Contrast Enhancement");
//
//        jLabel12.setText("Post-Processing");
//
//        postProcNoiseCheck.setText("Noise");
//
//        postProcContrastCheck.setText("Contrast");
//
//        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
//        jPanel2.setLayout(jPanel2Layout);
//        jPanel2Layout.setHorizontalGroup(
//            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel2Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(AdvContrastCheck)
//                    .addGroup(jPanel2Layout.createSequentialGroup()
//                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(jPanel2Layout.createSequentialGroup()
//                                .addComponent(jLabel10)
//                                .addGap(18, 18, 18)
//                                .addComponent(sensitivity, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
//                            .addComponent(AutoCalibCheck))
//                        .addGap(18, 18, 18)
//                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addComponent(SetCaptOptionBtn)
//                            .addComponent(GetCaptOptionBtn)))
//                    .addGroup(jPanel2Layout.createSequentialGroup()
//                        .addComponent(jLabel12)
//                        .addGap(34, 34, 34)
//                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addComponent(postProcContrastCheck)
//                            .addGroup(jPanel2Layout.createSequentialGroup()
//                                .addComponent(postProcNoiseCheck)
//                                .addGap(18, 18, 18)
//                                .addComponent(reductionLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
//                .addContainerGap(21, Short.MAX_VALUE))
//        );
//        jPanel2Layout.setVerticalGroup(
//            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel2Layout.createSequentialGroup()
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel10)
//                    .addComponent(sensitivity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(GetCaptOptionBtn))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(SetCaptOptionBtn)
//                    .addComponent(AutoCalibCheck))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(AdvContrastCheck)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel12)
//                    .addComponent(postProcNoiseCheck)
//                    .addComponent(reductionLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(postProcContrastCheck)
//                .addGap(62, 62, 62))
//        );
//
//        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("LFD Option (RS-G1)"));
//
//        jLabel9.setText("LFD Level");
//
//        LFDLevel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OFF", "Level 1", "Level 2", "Level 3", "Level 4", "Level 5", "Level 6" }));
//
//        GetLFDlevelBtn.setText("Read");
//        GetLFDlevelBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                GetLFDlevelBtnActionPerformed(evt);
//            }
//        });
//
//        setLFDlevelBtn.setText("Write");
//        setLFDlevelBtn.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                setLFDlevelBtnActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
//        jPanel3.setLayout(jPanel3Layout);
//        jPanel3Layout.setHorizontalGroup(
//            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel3Layout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(jLabel9)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addComponent(LFDLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addComponent(GetLFDlevelBtn)
//                .addGap(11, 11, 11)
//                .addComponent(setLFDlevelBtn)
//                .addContainerGap())
//        );
//        jPanel3Layout.setVerticalGroup(
//            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel3Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel9)
//                    .addComponent(LFDLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(GetLFDlevelBtn)
//                    .addComponent(setLFDlevelBtn))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Save Image Option"));
//        jPanel15.setToolTipText("");
//
//        jLabel49.setText("WSQ Compression Ratio :");
//
//        jTextField1.setText("1.5");
//
//        ImageTypeGroup.add(btnBitmapType);
//        btnBitmapType.setText("Bitmap");
//
//        ImageTypeGroup.add(btnWSQType);
//        btnWSQType.setText("WSQ");
//
//        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
//        jPanel15.setLayout(jPanel15Layout);
//        jPanel15Layout.setHorizontalGroup(
//            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel15Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addGroup(jPanel15Layout.createSequentialGroup()
//                        .addComponent(btnBitmapType)
//                        .addGap(0, 0, Short.MAX_VALUE))
//                    .addGroup(jPanel15Layout.createSequentialGroup()
//                        .addComponent(btnWSQType)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                        .addComponent(jLabel49)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
//                .addContainerGap())
//        );
//        jPanel15Layout.setVerticalGroup(
//            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel15Layout.createSequentialGroup()
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addComponent(btnBitmapType)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                        .addComponent(jLabel49)
//                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                    .addComponent(btnWSQType)))
//        );
//
//        javax.swing.GroupLayout optionsTabLayout = new javax.swing.GroupLayout(optionsTab);
//        optionsTab.setLayout(optionsTabLayout);
//        optionsTabLayout.setHorizontalGroup(
//            optionsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(optionsTabLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(optionsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addGroup(optionsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                .addContainerGap())
//        );
//        optionsTabLayout.setVerticalGroup(
//            optionsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(optionsTabLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(optionsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addGroup(optionsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                .addContainerGap(99, Short.MAX_VALUE))
//        );
//
//        FeatureTabPanel.addTab("Options", optionsTab);
//
//        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Segmentation Options"));
//
//        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Sensitivity"));
//
//        label1.setText("Minimum number of fingers : ");
//
//        selMinFingerCount.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "4", "3", "2", "1" }));
//        selMinFingerCount.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                selMinFingerCountActionPerformed(evt);
//            }
//        });
//
//        chkMissingFingerType.setActionCommand("Missing Finger Strict");
//        chkMissingFingerType.addMouseListener(new java.awt.event.MouseAdapter() {
//            public void mouseClicked(java.awt.event.MouseEvent evt) {
//                chkMissingFingerTypeMouseClicked(evt);
//            }
//        });
//
//        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
//        jPanel9.setLayout(jPanel9Layout);
//        jPanel9Layout.setHorizontalGroup(
//            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel9Layout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(selMinFingerCount, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addComponent(chkMissingFingerType)
//                .addContainerGap())
//        );
//        jPanel9Layout.setVerticalGroup(
//            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel9Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
//                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                        .addComponent(chkMissingFingerType)
//                        .addComponent(selMinFingerCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Custom Size"));
//
//        customSegCheck.setText("Segment Size");
//
//        jLabel4.setText("w : ");
//
//        jLabel42.setText("h : ");
//
//        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
//        jPanel10.setLayout(jPanel10Layout);
//        jPanel10Layout.setHorizontalGroup(
//            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel10Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(customSegCheck)
//                    .addGroup(jPanel10Layout.createSequentialGroup()
//                        .addComponent(jLabel4)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(customSegWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(jLabel42)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(customSegHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//        jPanel10Layout.setVerticalGroup(
//            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel10Layout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(customSegCheck)
//                .addGap(18, 18, 18)
//                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel4)
//                    .addComponent(customSegWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(jLabel42)
//                    .addComponent(customSegHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Missing Fingers"));
//
//        leftFingersList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
//
//        ctLeftLittle.setText("LEFT LITTLE");
//
//        ctLeftRing.setText("LEFT RING");
//
//        ctLeftMiddle.setText("LEFT MIDDLE");
//
//        ctLeftIndex.setText("LEFT INDEX");
//
//        javax.swing.GroupLayout leftFingersListLayout = new javax.swing.GroupLayout(leftFingersList);
//        leftFingersList.setLayout(leftFingersListLayout);
//        leftFingersListLayout.setHorizontalGroup(
//            leftFingersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(leftFingersListLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(leftFingersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(ctLeftLittle)
//                    .addComponent(ctLeftRing)
//                    .addComponent(ctLeftMiddle)
//                    .addComponent(ctLeftIndex))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//        leftFingersListLayout.setVerticalGroup(
//            leftFingersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(leftFingersListLayout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(ctLeftLittle)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(ctLeftRing)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(ctLeftMiddle)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addComponent(ctLeftIndex)
//                .addContainerGap())
//        );
//
//        rightFingersList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
//
//        ctRightIndex.setText("RIGHT INDEX");
//
//        ctRightMiddle.setText("RIGHT MIDDLE");
//
//        ctRightRing.setText("RIGHT RING");
//
//        ctRightLittle.setText("RIGHT LITTLE");
//
//        javax.swing.GroupLayout rightFingersListLayout = new javax.swing.GroupLayout(rightFingersList);
//        rightFingersList.setLayout(rightFingersListLayout);
//        rightFingersListLayout.setHorizontalGroup(
//            rightFingersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(rightFingersListLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(rightFingersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(ctRightIndex)
//                    .addComponent(ctRightMiddle)
//                    .addComponent(ctRightRing)
//                    .addComponent(ctRightLittle))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//        rightFingersListLayout.setVerticalGroup(
//            rightFingersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(rightFingersListLayout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(ctRightIndex)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(ctRightMiddle)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(ctRightRing)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addComponent(ctRightLittle)
//                .addContainerGap())
//        );
//
//        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
//        jPanel12.setLayout(jPanel12Layout);
//        jPanel12Layout.setHorizontalGroup(
//            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel12Layout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(leftFingersList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(26, 26, 26)
//                .addComponent(rightFingersList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//        jPanel12Layout.setVerticalGroup(
//            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel12Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
//                    .addComponent(rightFingersList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(leftFingersList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
//        jPanel8.setLayout(jPanel8Layout);
//        jPanel8Layout.setHorizontalGroup(
//            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel8Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addContainerGap())
//        );
//        jPanel8Layout.setVerticalGroup(
//            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel8Layout.createSequentialGroup()
//                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//        );
//
//        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Capture Options"));
//
//        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Direction"));
//
//        selCaptDir.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Default", "Left", "Right" }));
//
//        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
//        jPanel13.setLayout(jPanel13Layout);
//        jPanel13Layout.setHorizontalGroup(
//            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel13Layout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(selCaptDir, 0, 153, Short.MAX_VALUE)
//                .addContainerGap())
//        );
//        jPanel13Layout.setVerticalGroup(
//            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addComponent(selCaptDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap())
//        );
//
//        seqCheckPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Target Images (Seq. Check)"));
//
//        jScrollPane1.setViewportView(seqTargetList);
//
//        javax.swing.GroupLayout seqCheckPaneLayout = new javax.swing.GroupLayout(seqCheckPane);
//        seqCheckPane.setLayout(seqCheckPaneLayout);
//        seqCheckPaneLayout.setHorizontalGroup(
//            seqCheckPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(seqCheckPaneLayout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
//                .addContainerGap())
//        );
//        seqCheckPaneLayout.setVerticalGroup(
//            seqCheckPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(seqCheckPaneLayout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
//        jPanel11.setLayout(jPanel11Layout);
//        jPanel11Layout.setHorizontalGroup(
//            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
//                    .addComponent(seqCheckPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                .addContainerGap())
//        );
//        jPanel11Layout.setVerticalGroup(
//            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel11Layout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(seqCheckPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addGap(7, 7, 7))
//        );
//
//        javax.swing.GroupLayout callbackOptTabLayout = new javax.swing.GroupLayout(callbackOptTab);
//        callbackOptTab.setLayout(callbackOptTabLayout);
//        callbackOptTabLayout.setHorizontalGroup(
//            callbackOptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(callbackOptTabLayout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addContainerGap())
//        );
//        callbackOptTabLayout.setVerticalGroup(
//            callbackOptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(callbackOptTabLayout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(callbackOptTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
//                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        FeatureTabPanel.addTab("Callback Options", callbackOptTab);
//
//        jLabel36.setFont(new java.awt.Font("굴림", 3, 12)); // NOI18N
//        jLabel36.setText(" * Capture Sequence : left 4 fingers - right 4 fingers - 2 thumbs ");
//
//        btnStartSeqCheck.setText("Start");
//        btnStartSeqCheck.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                btnStartSeqCheckActionPerformed(evt);
//            }
//        });
//
//        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Left", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("굴림", 0, 10))); // NOI18N
//
//        drawSegLT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
//        drawSegLT.setPreferredSize(new java.awt.Dimension(102, 102));
//
//        javax.swing.GroupLayout drawSegLTLayout = new javax.swing.GroupLayout(drawSegLT);
//        drawSegLT.setLayout(drawSegLTLayout);
//        drawSegLTLayout.setHorizontalGroup(
//            drawSegLTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//        drawSegLTLayout.setVerticalGroup(
//            drawSegLTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//
//        drawSegLI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
//
//        javax.swing.GroupLayout drawSegLILayout = new javax.swing.GroupLayout(drawSegLI);
//        drawSegLI.setLayout(drawSegLILayout);
//        drawSegLILayout.setHorizontalGroup(
//            drawSegLILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//        drawSegLILayout.setVerticalGroup(
//            drawSegLILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//
//        drawSegLM.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
//
//        javax.swing.GroupLayout drawSegLMLayout = new javax.swing.GroupLayout(drawSegLM);
//        drawSegLM.setLayout(drawSegLMLayout);
//        drawSegLMLayout.setHorizontalGroup(
//            drawSegLMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//        drawSegLMLayout.setVerticalGroup(
//            drawSegLMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//
//        drawSegLR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
//
//        javax.swing.GroupLayout drawSegLRLayout = new javax.swing.GroupLayout(drawSegLR);
//        drawSegLR.setLayout(drawSegLRLayout);
//        drawSegLRLayout.setHorizontalGroup(
//            drawSegLRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//        drawSegLRLayout.setVerticalGroup(
//            drawSegLRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//
//        drawSegLL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
//
//        javax.swing.GroupLayout drawSegLLLayout = new javax.swing.GroupLayout(drawSegLL);
//        drawSegLL.setLayout(drawSegLLLayout);
//        drawSegLLLayout.setHorizontalGroup(
//            drawSegLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//        drawSegLLLayout.setVerticalGroup(
//            drawSegLLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//
//        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
//        jPanel22.setLayout(jPanel22Layout);
//        jPanel22Layout.setHorizontalGroup(
//            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel22Layout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(drawSegLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addComponent(drawSegLI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addComponent(drawSegLM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addComponent(drawSegLR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addComponent(drawSegLL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap(18, Short.MAX_VALUE))
//        );
//        jPanel22Layout.setVerticalGroup(
//            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(drawSegLL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(drawSegLR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(drawSegLM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(drawSegLI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(drawSegLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addContainerGap())
//        );
//
//        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Right", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("굴림", 0, 10))); // NOI18N
//
//        drawSegRT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
//
//        javax.swing.GroupLayout drawSegRTLayout = new javax.swing.GroupLayout(drawSegRT);
//        drawSegRT.setLayout(drawSegRTLayout);
//        drawSegRTLayout.setHorizontalGroup(
//            drawSegRTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//        drawSegRTLayout.setVerticalGroup(
//            drawSegRTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//
//        drawSegRI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
//
//        javax.swing.GroupLayout drawSegRILayout = new javax.swing.GroupLayout(drawSegRI);
//        drawSegRI.setLayout(drawSegRILayout);
//        drawSegRILayout.setHorizontalGroup(
//            drawSegRILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//        drawSegRILayout.setVerticalGroup(
//            drawSegRILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//
//        drawSegRM.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
//
//        javax.swing.GroupLayout drawSegRMLayout = new javax.swing.GroupLayout(drawSegRM);
//        drawSegRM.setLayout(drawSegRMLayout);
//        drawSegRMLayout.setHorizontalGroup(
//            drawSegRMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//        drawSegRMLayout.setVerticalGroup(
//            drawSegRMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//
//        drawSegRR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
//
//        javax.swing.GroupLayout drawSegRRLayout = new javax.swing.GroupLayout(drawSegRR);
//        drawSegRR.setLayout(drawSegRRLayout);
//        drawSegRRLayout.setHorizontalGroup(
//            drawSegRRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//        drawSegRRLayout.setVerticalGroup(
//            drawSegRRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//
//        drawSegRL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
//
//        javax.swing.GroupLayout drawSegRLLayout = new javax.swing.GroupLayout(drawSegRL);
//        drawSegRL.setLayout(drawSegRLLayout);
//        drawSegRLLayout.setHorizontalGroup(
//            drawSegRLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//        drawSegRLLayout.setVerticalGroup(
//            drawSegRLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//
//        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
//        jPanel17.setLayout(jPanel17Layout);
//        jPanel17Layout.setHorizontalGroup(
//            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel17Layout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(drawSegRT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addComponent(drawSegRI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addComponent(drawSegRM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addComponent(drawSegRR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addComponent(drawSegRL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//        jPanel17Layout.setVerticalGroup(
//            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel17Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(drawSegRL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(drawSegRR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addComponent(drawSegRM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
//                        .addComponent(drawSegRI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addComponent(drawSegRT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
//        jPanel14.setLayout(jPanel14Layout);
//        jPanel14Layout.setHorizontalGroup(
//            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel14Layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                    .addGroup(jPanel14Layout.createSequentialGroup()
//                        .addGap(15, 15, 15)
//                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addGap(18, 18, 18)
//                        .addComponent(btnStartSeqCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                    .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                .addContainerGap(149, Short.MAX_VALUE))
//        );
//        jPanel14Layout.setVerticalGroup(
//            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(jPanel14Layout.createSequentialGroup()
//                .addGap(14, 14, 14)
//                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel36)
//                    .addComponent(btnStartSeqCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap(22, Short.MAX_VALUE))
//        );
//
//        FeatureTabPanel.addTab("Sequence Check", jPanel14);
//
//        captureStatus.setText("N/A");
//
//        jLabel11.setText("Capture Status :");
//
//        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
//        getContentPane().setLayout(layout);
//        layout.setHorizontalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(FeatureTabPanel)
//                    .addComponent(statusField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                    .addGroup(layout.createSequentialGroup()
//                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                            .addComponent(drawPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                            .addGroup(layout.createSequentialGroup()
//                                .addComponent(jLabel11)
//                                .addGap(18, 18, 18)
//                                .addComponent(captureStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                            .addComponent(devicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                            .addComponent(capturePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                            .addComponent(previewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//                        .addGap(0, 0, Short.MAX_VALUE))))
//        );
//        layout.setVerticalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(layout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(statusField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
//                    .addGroup(layout.createSequentialGroup()
//                        .addComponent(devicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(capturePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addGap(7, 7, 7)
//                        .addComponent(previewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                    .addComponent(drawPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(captureStatus)
//                    .addComponent(jLabel11))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(FeatureTabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        drawPanel.getAccessibleContext().setAccessibleName("previewFrame");
//        captureStatus.getAccessibleContext().setAccessibleName("captureStatus");
//        captureStatus.getAccessibleContext().setAccessibleDescription("");
//
//        pack();
//    }// </editor-fold>//GEN-END:initComponents
//
//    private void initSDKBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initSDKBtnActionPerformed
//        int result = RealScan_JNI.RS_SUCCESS;
//        selectDevice.removeAllItems();
//        numOfDevice = RealScan_JNI.RS_InitSDK("", 0);
//
//        if (RealScan_JNI.RS_GetLastError() == RealScan_JNI.RS_SUCCESS || RealScan_JNI.RS_GetLastError() == RealScan_JNI.RS_ERR_SDK_ALREADY_INITIALIZED) {
//            statusField.setText("The SDK is initialized successfully");
//            for (int i = 0; i < numOfDevice; i++) {
//                String deviceName = "Device " + i;
//                selectDevice.addItem(deviceName);
//            }
//            if (numOfDevice > 0) {
//                selectDevice.setSelectedIndex(0);
//                initDeviceBtn.setEnabled(true);
//            }
//
//            RealScan_JNI.RSSDKInfo sdkInfo = new RealScan_JNI.RSSDKInfo();
//            result = RealScan_JNI.RS_GetSDKInfo(sdkInfo);
//            if (result == RealScan_JNI.RS_SUCCESS) {
//                SDKInfoText.setText(sdkInfo.version + " " + sdkInfo.buildDate);
//            }
//        } else {
//            String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//            statusField.setText(errStr);
//        }
//    }//GEN-LAST:event_initSDKBtnActionPerformed
//
//    private void initDeviceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initDeviceBtnActionPerformed
//        int result = RealScan_JNI.RS_SUCCESS;
//        deviceHandle = RealScan_JNI.RS_InitDevice(selectDevice.getSelectedIndex());
//
//        if (RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_SUCCESS && RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_ERR_DEVICE_ALREADY_INITIALIZED) {
//            String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//            statusField.setText(errStr);
//            return;
//        }
//
//        RealScan_JNI.RSDeviceInfo deviceInfoT = new RealScan_JNI.RSDeviceInfo();
//
//        result = RealScan_JNI.RS_GetDeviceInfo(deviceHandle, deviceInfoT);
//
//        if (result != RealScan_JNI.RS_SUCCESS) {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//            return;
//        }
//
//        deviceNameField.setText(deviceInfoT.productName + " " + deviceInfoT.deviceID);
//        FirmwareInfoField.setText(deviceInfoT.firmwareVersion);
//        ModelInfo.setText(deviceInfoT.productName);
//        FirmwareInfo.setText(deviceInfoT.firmwareVersion);
//        HardwareInfo.setText(deviceInfoT.hardwareVersion);
//        DeviceIDInfo.setText(deviceInfoT.deviceID);
//
//        initDeviceBtn.setEnabled(false);
//        exitDeviceBtn.setEnabled(true);
//
//        selectMode.setSelectedIndex(0);
//
//        statusField.setText("The device is initialized successfully");
//    }//GEN-LAST:event_initDeviceBtnActionPerformed
//
//    private void exitDeviceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitDeviceBtnActionPerformed
//        int result = RealScan_JNI.RS_SUCCESS;
//
//        RealScan_JNI.RS_ExitDevice(deviceHandle);
//        deviceNameField.setText("");
//        FirmwareInfoField.setText("");
//        ModelInfo.setText("");
//        FirmwareInfo.setText("");
//        HardwareInfo.setText("");
//        DeviceIDInfo.setText("");
//        statusField.setText("The device is disconnected successfully");
//        initBtnStatus();
//        if (numOfDevice > 0) {
//            initDeviceBtn.setEnabled(true);
//        }
//        selectMode.setSelectedIndex(0);
//    }//GEN-LAST:event_exitDeviceBtnActionPerformed
//
//    private void startCaptureBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startCaptureBtnActionPerformed
//        int result = RealScan_JNI.RS_SUCCESS;
//        setImageInitPanel();
//
//        selectModeActionPerformed(null);
//        if(!bIsCaptureModeSelected){
//            statusField.setText("Capture mode isn't selected successfully");
//            return;
//        }
//
//        if(nCaptureMode == RealScan_JNI.RS_CAPTURE_FLAT_MANUAL)
//        {
//            String msg = "Do you want to capture in custom size" + "(" + nCustomCaptWidth + "x" + nCustomCaptHeight + ")";
//            int msgRet = JOptionPane.showConfirmDialog(null, msg, "Custom Size Capture", JOptionPane.YES_NO_OPTION);
//            if(msgRet == JOptionPane.NO_OPTION)
//                return;
//        }
//        else if(nCaptureMode == RealScan_JNI.RS_CAPTURE_ROLL_FINGER || nCaptureMode == RealScan_JNI.RS_CAPTURE_ROLL_FINGER_EX)
//        {
//            statusField.setText("Roll a finger on the sensor");
//        }
//        else
//        {
//            statusField.setText("Place fingers on the sensor");
//        }
//
//        if (autoCheck.isSelected() == true) {
//            if(_selectedPrevMode == PrevMode.advPrevCallbackDraw) {
//                RealScan_JNI.RS_RegisterAdvCaptureDataCallback(deviceHandle, this, "RSAdvCaptureResultCallback");
//            } else {
//                RealScan_JNI.RS_RegisterCaptureDataCallback(deviceHandle, this, "RSRawCaptureResultCallback");
//            }
//        } else {
//            RealScan_JNI.RS_RegisterCaptureDataCallback(deviceHandle, this, null);
//            RealScan_JNI.RS_RegisterAdvCaptureDataCallback(deviceHandle, this, null);
//        }
//
//        if (System.getProperty("os.name").contains("Windows")) {
//            RealScan_JNI.RS_RemoveAllOverlay(deviceHandle);
//        }
//
//        result = RealScan_JNI.RS_StartCapture(deviceHandle, autoCheck.isSelected(), 0);
//
//        if (result != RealScan_JNI.RS_SUCCESS) {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//            return;
//        }
//
//        startCaptureBtn.setEnabled(false);
//        takeAutoCaptureBtn.setEnabled(false);
//        stopCaptureBtn.setEnabled(true);
//        if (autoCheck.isSelected() == false) {
//            takeCaptureBtn.setEnabled(true);
//        }
//    }//GEN-LAST:event_startCaptureBtnActionPerformed
//
//    private void stopCaptureBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopCaptureBtnActionPerformed
//        int result = RealScan_JNI.RS_SUCCESS;
//        setImageInitPanel();
//
//        result = RealScan_JNI.RS_AbortCapture(deviceHandle);
//        if (result != RealScan_JNI.RS_SUCCESS) {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//        } else {
//            statusField.setText("Capture Stopped");
//            startCaptureBtn.setEnabled(true);
//            takeAutoCaptureBtn.setEnabled(true);
//            stopCaptureBtn.setEnabled(false);
//            takeCaptureBtn.setEnabled(false);
//        }
//    }//GEN-LAST:event_stopCaptureBtnActionPerformed
//
//    private void takeCaptureBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takeCaptureBtnActionPerformed
//        int result = RealScan_JNI.RS_SUCCESS;
//
//        RealScan_JNI.RSImageInfo imageInfo = new RealScan_JNI.RSImageInfo();
//
//        result = RealScan_JNI.RS_TakeCurrentImageData(deviceHandle, 20000, imageInfo);
//
//        startCaptureBtn.setEnabled(true);
//        takeAutoCaptureBtn.setEnabled(true);
//        stopCaptureBtn.setEnabled(false);
//        takeCaptureBtn.setEnabled(false);
//
//        if (result != RealScan_JNI.RS_SUCCESS && result != RealScan_JNI.RS_WRN_TOO_POOR_QUALITY && result != RealScan_JNI.RS_WRN_BAD_SCAN
//                && result != RealScan_JNI.RS_ERR_SEGMENT_FEWER_FINGER && result != RealScan_JNI.RS_ERR_SEGMENT_WRONG_HAND ) {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//            return;
//        }
//
//        statusField.setText("An image is captured successfully");
//        if(imageInfo.pbyImgBuf == null || imageInfo.imageWidth == 0 || imageInfo.imageHeight == 0) {
//            statusField.setText("Image is empty!");
//            return;
//        }
//
//        setImagePanel(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight);
//        saveSeqCheckTargetImages(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight, nSlapType, nFingerCount);
//
//        if (selectResult.getSelectedIndex() == 1) // save
//            saveImageFile(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight);
//        else if(selectResult.getSelectedIndex() == 2) // segment
//            segmentImageResult(imageInfo);
//        else if(selectResult.getSelectedIndex() == 3) // segment & save
//            segmentedImageSaveResult(imageInfo);
//        else if(selectResult.getSelectedIndex() == 4) // sequence check
//            sequenceCheckProcess(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight);
//    }//GEN-LAST:event_takeCaptureBtnActionPerformed
//
//    private void takeAutoCaptureBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takeAutoCaptureBtnActionPerformed
//        selectModeActionPerformed(null);
//
//        if(!bIsCaptureModeSelected){
//            statusField.setText("Capture mode isn't selected successfully");
//            return;
//        }
//
//        if(nCaptureMode == RealScan_JNI.RS_CAPTURE_FLAT_MANUAL)
//        {
//            String msg = "Do you want to capture in custom size" + "(" + nCustomCaptWidth + "x" + nCustomCaptHeight + ")";
//            int msgRet = JOptionPane.showConfirmDialog(null, msg, "Custom Size Capture", JOptionPane.YES_NO_OPTION);
//            if(msgRet == JOptionPane.NO_OPTION)
//                return;
//        }
//        else if(nCaptureMode == RealScan_JNI.RS_CAPTURE_ROLL_FINGER || nCaptureMode == RealScan_JNI.RS_CAPTURE_ROLL_FINGER_EX)
//        {
//            statusField.setText("Roll a finger on the sensor");
//        }
//        else
//        {
//            statusField.setText("Place fingers on the sensor");
//        }
//
//        Thread t = new Thread(DoAutoCapture);
//        t.start();
//    }//GEN-LAST:event_takeAutoCaptureBtnActionPerformed
//
//    private void selectDeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectDeviceActionPerformed
//        actionPerformed(evt);
//    }//GEN-LAST:event_selectDeviceActionPerformed
//
//    private void selectModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectModeActionPerformed
//        int result = RealScan_JNI.RS_SUCCESS;
//        int tmpCaptureDir = -1;
//        String strCaptureMode = selectMode.getSelectedItem().toString();
//
//        if(strCaptureMode.compareTo("Disabled") == 0)
//            nCaptureMode = RealScan_JNI.RS_CAPTURE_DISABLED;
//        else if(strCaptureMode.compareTo("Roll") == 0)
//            nCaptureMode = RealScan_JNI.RS_CAPTURE_ROLL_FINGER;
//        else if(strCaptureMode.compareTo("Flat One") == 0)
//            nCaptureMode = RealScan_JNI.RS_CAPTURE_FLAT_SINGLE_FINGER;
//        else if(strCaptureMode.compareTo("Flat Two") == 0)
//            nCaptureMode = RealScan_JNI.RS_CAPTURE_FLAT_TWO_FINGERS;
//        else if(strCaptureMode.compareTo("Flat Four(Left)") == 0)
//            nCaptureMode = RealScan_JNI.RS_CAPTURE_FLAT_LEFT_FOUR_FINGERS;
//        else if(strCaptureMode.compareTo("Flat Four(Right)") == 0)
//            nCaptureMode = RealScan_JNI.RS_CAPTURE_FLAT_RIGHT_FOUR_FINGERS;
//        else if(strCaptureMode.compareTo("Palm(Left)") == 0)
//            nCaptureMode = RealScan_JNI.RS_CAPTURE_FLAT_LEFT_PALM;
//        else if(strCaptureMode.compareTo("Palm(Right)") == 0)
//            nCaptureMode = RealScan_JNI.RS_CAPTURE_FLAT_RIGHT_PALM;
//        else if(strCaptureMode.compareTo("Flat One(Ex)") == 0)
//            nCaptureMode = RealScan_JNI.RS_CAPTURE_FLAT_SINGLE_FINGER_EX;
//        else if(strCaptureMode.compareTo("Flat Two(Ex)") == 0)
//            nCaptureMode = RealScan_JNI.RS_CAPTURE_FLAT_TWO_FINGERS_EX;
//        else if(strCaptureMode.compareTo("Side Palm(Left)") == 0)
//            nCaptureMode = RealScan_JNI.RS_CAPTURE_FLAT_LEFT_SIDE_PALM;
//        else if(strCaptureMode.compareTo("Side Palm(Right)") == 0)
//            nCaptureMode = RealScan_JNI.RS_CAPTURE_FLAT_RIGHT_SIDE_PALM;
//        else if(strCaptureMode.compareTo("Writer's Palm(Left)") == 0)
//            nCaptureMode = RealScan_JNI.RS_CAPTURE_FLAT_LEFT_WRITERS_PALM;
//        else if(strCaptureMode.compareTo("Writer's Palm(Right)") == 0)
//            nCaptureMode = RealScan_JNI.RS_CAPTURE_FLAT_RIGHT_WRITERS_PALM;
//        else if(strCaptureMode.compareTo("Custom(Flat)") == 0)
//            nCaptureMode = RealScan_JNI.RS_CAPTURE_FLAT_MANUAL;
//
//        for(int j=0; j<3; j++)
//        {
//            if(selCaptDir.getSelectedIndex() == j)
//                tmpCaptureDir = captureDirections[j];
//        }
//
//        if(nCaptureMode == RealScan_JNI.RS_CAPTURE_FLAT_MANUAL)
//        {
//            if(customXField.getText().equals("") || customYField.getText().equals("") || customWField.getText().equals("") || customHField.getText().equals(""))
//            {
//                JOptionPane.showMessageDialog(null, "Please set all the text boxes filled");
//                bIsCaptureModeSelected = false;
//                return;
//            }
//
//            nCustomCaptX = Integer.parseInt(customXField.getText());
//            nCustomCaptY = Integer.parseInt(customYField.getText());
//            nCustomCaptWidth = Integer.parseInt(customWField.getText());
//            nCustomCaptHeight = Integer.parseInt(customHField.getText());
//
//            result = RealScan_JNI.RS_SetManualCaptureMode(deviceHandle, nCustomCaptX, nCustomCaptY, nCustomCaptWidth, nCustomCaptHeight, 0, true);
//        }
//        else
//        {
//            switch(nCaptureMode)
//            {
//                case RealScan_JNI.RS_CAPTURE_FLAT_SINGLE_FINGER:
//                case RealScan_JNI.RS_CAPTURE_FLAT_SINGLE_FINGER_EX:
//                    nSlapType = RealScan_JNI.RS_SLAP_ONE_FINGER;
//                    nFingerCount = 1;
//                    break;
//                case RealScan_JNI.RS_CAPTURE_FLAT_TWO_FINGERS:
//                case RealScan_JNI.RS_CAPTURE_FLAT_TWO_FINGERS_EX:
//                    nSlapType = RealScan_JNI.RS_SLAP_TWO_THUMB;
//                    nFingerCount = 2;
//                    break;
//                case RealScan_JNI.RS_CAPTURE_FLAT_LEFT_FOUR_FINGERS:
//                    nSlapType = RealScan_JNI.RS_SLAP_LEFT_FOUR;
//                    nFingerCount = 4;
//                    break;
//                case RealScan_JNI.RS_CAPTURE_FLAT_RIGHT_FOUR_FINGERS:
//                    nSlapType = RealScan_JNI.RS_SLAP_RIGHT_FOUR;
//                    nFingerCount = 4;
//                    break;
//                default:
//                    break;
//            }
//            result = RealScan_JNI.RS_SetCaptureModeWithDir(deviceHandle, nCaptureMode, tmpCaptureDir, 0, true);
//        }
//
//        if (result != RealScan_JNI.RS_SUCCESS) {
//            startCaptureBtn.setEnabled(false);
//            takeAutoCaptureBtn.setEnabled(false);
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//            selectMode.setSelectedIndex(0);
//            bIsCaptureModeSelected = false;
//            return;
//        }
//        captureSizeField.setText("");
//
//        if (selectMode.getSelectedIndex() == 0) {
//            startCaptureBtn.setEnabled(false);
//            takeAutoCaptureBtn.setEnabled(false);
//            statusField.setText("capture mode disable");
//            bIsCaptureModeSelected = false;
//            return;
//        }
//
//        startCaptureBtn.setEnabled(true);
//        takeAutoCaptureBtn.setEnabled(true);
//
//        int captureSize[] = RealScan_JNI.RS_GetImageSize(deviceHandle);
//        if (RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_SUCCESS) {
//            String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//            statusField.setText(errStr);
//            bIsCaptureModeSelected = false;
//            return;
//        }
//
//        bIsCaptureModeSelected = true;
//        captureSizeField.setText(captureSize[0] + " X " + captureSize[1]);
//        statusField.setText("capture mode setting success");
//    }//GEN-LAST:event_selectModeActionPerformed
//
//    private void selectResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectResultActionPerformed
//        actionPerformed(evt);
//        if(selectResult.getSelectedIndex() == 1) {
//            Object result = JOptionPane.showInputDialog(null, "Which do you want to save, Bitmap or WSQ?", "Image Type Setting",
//                    JOptionPane.QUESTION_MESSAGE, null, new Object[]{ "Bitmap", "WSQ"}, "Bitmap");
//
//            if(result.toString() == "WSQ") {
//                btnWSQType.setSelected(true);
//            } else {
//                btnBitmapType.setSelected(true);
//            }
//        }
//    }//GEN-LAST:event_selectResultActionPerformed
//
//    private void directDrawBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directDrawBtnActionPerformed
//        setPreviewMode(evt);
//    }//GEN-LAST:event_directDrawBtnActionPerformed
//
//    private void prevCallbackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevCallbackBtnActionPerformed
//        setPreviewMode(evt);
//    }//GEN-LAST:event_prevCallbackBtnActionPerformed
//
//    private void advPrevCallbackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advPrevCallbackBtnActionPerformed
//        setPreviewMode(evt);
//    }//GEN-LAST:event_advPrevCallbackBtnActionPerformed
//
//    private void chkMissingFingerTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkMissingFingerTypeMouseClicked
//        setMissingFingerType();
//    }//GEN-LAST:event_chkMissingFingerTypeMouseClicked
//
//    private void selMinFingerCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selMinFingerCountActionPerformed
//        int minFinger = Integer.valueOf(selMinFingerCount.getSelectedItem().toString());
//        RealScan_JNI.RS_SetMinimumFinger(deviceHandle, minFinger);
//
//        if(RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_SUCCESS){
//            String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//            statusField.setText(errStr);
//        }
//        else
//        statusField.setText("Setting minimum finger count is done successfully done!!");
//    }//GEN-LAST:event_selMinFingerCountActionPerformed
//
//    private void setLFDlevelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setLFDlevelBtnActionPerformed
//        int result = RealScan_JNI.RS_SetLFDLevel(deviceHandle, LFDLevel.getSelectedIndex());
//        if (result != RealScan_JNI.RS_SUCCESS) {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//        }
//    }//GEN-LAST:event_setLFDlevelBtnActionPerformed
//
//    private void GetLFDlevelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetLFDlevelBtnActionPerformed
//        int nLfdlevel = RealScan_JNI.RS_GetLFDLevel(deviceHandle);
//        LFDLevel.setSelectedIndex(nLfdlevel);
//    }//GEN-LAST:event_GetLFDlevelBtnActionPerformed
//
//    private void SetCaptOptionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetCaptOptionBtnActionPerformed
//        int nCaptureMode = selectMode.getSelectedIndex();
//        int nSensitivity = sensitivityOptions[sensitivity.getSelectedIndex()];
//        int nReductionLevel = Integer.parseInt(reductionLevel.getText());
//        boolean isAutoCalib = AutoCalibCheck.isSelected();
//        boolean isAdvContrast = AdvContrastCheck.isSelected();
//        boolean isContEnh = postProcContrastCheck.isSelected();
//        boolean isNoise = postProcNoiseCheck.isSelected();
//
//        RealScan_JNI.RS_SetCaptureMode(deviceHandle, nCaptureMode, nSensitivity, true);
//        RealScan_JNI.RS_SetAutomaticCalibrate(deviceHandle, isAutoCalib);
//        RealScan_JNI.RS_SetAdvancedContrastEnhancement(deviceHandle, isAdvContrast);
//        RealScan_JNI.RS_SetPostProcessingEx(deviceHandle, isContEnh, isNoise, nReductionLevel);
//    }//GEN-LAST:event_SetCaptOptionBtnActionPerformed
//
//    private void GetCaptOptionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetCaptOptionBtnActionPerformed
//        boolean bIsAutoCalib = RealScan_JNI.RS_GetAutomaticCalibrate(deviceHandle);
//        AutoCalibCheck.setSelected(bIsAutoCalib);
//
//        boolean bIsAdvContrast = RealScan_JNI.RS_GetAdvancedContrastEnhancement(deviceHandle);
//        AdvContrastCheck.setSelected(bIsAdvContrast);
//
//        int[] postProcOptions = RealScan_JNI.RS_GetPostProcessingEx(deviceHandle);
//        if (postProcOptions[0] != 0) {
//            postProcContrastCheck.setSelected(true);
//        }
//        if (postProcOptions[1] != 0) {
//            postProcNoiseCheck.setSelected(true);
//        }
//        String str = Integer.toString(postProcOptions[2]);
//        reductionLevel.setText(str);
//    }//GEN-LAST:event_GetCaptOptionBtnActionPerformed
//
//    private void setRollCaptOptionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setRollCaptOptionBtnActionPerformed
//        int nRollProfile = rollProfileOpt.getSelectedIndex();
//        int nRollDirection = rollDirectionOpt.getSelectedIndex();
//        int nRollTimeout = Integer.parseInt(rollTimeoutVal.getText());
//
//        int result = RealScan_JNI.RS_SetRollFingerOption(deviceHandle, nRollDirection, nRollTimeout, nRollProfile);
//        if (result != RealScan_JNI.RS_SUCCESS) {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//        }
//    }//GEN-LAST:event_setRollCaptOptionBtnActionPerformed
//
//    private void GetRollCaptOptionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetRollCaptOptionBtnActionPerformed
//        int[] rollOptions = RealScan_JNI.RS_GetRollFingerOption(deviceHandle);
//
//        rollDirectionOpt.setSelectedIndex(rollOptions[0]);
//        String str = Integer.toString(rollOptions[1]);
//        rollTimeoutVal.setText(str);
//        rollProfileOpt.setSelectedIndex(rollOptions[2]);
//    }//GEN-LAST:event_GetRollCaptOptionBtnActionPerformed
//
//    private void ClearOverlayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearOverlayBtnActionPerformed
//        if(System.getProperty("os.name").contains("Windows")) {
//            RealScan_JNI.RS_RemoveAllOverlay(deviceHandle);
//            if (RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//                statusField.setText(errStr);
//            }
//        } else {
//            statusField.setText("It's not working on Linux");
//        }
//    }//GEN-LAST:event_ClearOverlayBtnActionPerformed
//
//    private void ShowAllOverlayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowAllOverlayBtnActionPerformed
//        if(System.getProperty("os.name").contains("Windows")) {
//            RealScan_JNI.RS_ShowAllOverlay(deviceHandle, true);
//            if (RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//                statusField.setText(errStr);
//            }
//        } else {
//            statusField.setText("It's not working on Linux");
//        }
//    }//GEN-LAST:event_ShowAllOverlayBtnActionPerformed
//
//    private void HideOverlayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HideOverlayBtnActionPerformed
//        if(System.getProperty("os.name").contains("Windows")) {
//            RealScan_JNI.RS_ShowAllOverlay(deviceHandle, false);
//            if (RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//                statusField.setText(errStr);
//            }
//        } else {
//            statusField.setText("It's not working on Linux");
//        }
//    }//GEN-LAST:event_HideOverlayBtnActionPerformed
//
//    private void showQuadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showQuadBtnActionPerformed
//        if(System.getProperty("os.name").contains("Windows")) {
//            RealScan_JNI.RSOverlayQuadrangle quad = new RealScan_JNI.RSOverlayQuadrangle();
//            quad.pos_x[0] = Integer.parseInt(overlayQuadX1.getText());
//            quad.pos_y[0] = Integer.parseInt(overlayQuadY1.getText());
//            quad.pos_x[1] = Integer.parseInt(overlayQuadX2.getText());
//            quad.pos_y[1] = Integer.parseInt(overlayQuadY2.getText());
//            quad.pos_x[2] = Integer.parseInt(overlayQuadX3.getText());
//            quad.pos_y[2] = Integer.parseInt(overlayQuadY3.getText());
//            quad.pos_x[3] = Integer.parseInt(overlayQuadX4.getText());
//            quad.pos_y[3] = Integer.parseInt(overlayQuadY4.getText());
//            quad.color = overlayColorOptions[overlayLineColor.getSelectedIndex()];
//            quad.width = Integer.parseInt(overlayLineWidth.getText());
//
//            int overlayHandle = RealScan_JNI.RS_AddOverlayQuadrangle(deviceHandle, quad);
//            if (RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//                statusField.setText(errStr);
//            }
//
//            RealScan_JNI.RS_ShowOverlay(overlayHandle, true);
//            if (RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//                statusField.setText(errStr);
//            }
//        } else {
//            statusField.setText("It's not working on Linux");
//        }
//    }//GEN-LAST:event_showQuadBtnActionPerformed
//
//    private void showLineBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showLineBtnActionPerformed
//        if(System.getProperty("os.name").contains("Windows")) {
//            RealScan_JNI.RSOverlayLine line = new RealScan_JNI.RSOverlayLine();
//            line.startPos_x = Integer.parseInt(overlayLineX1.getText());
//            line.startPos_y = Integer.parseInt(overlayLineY1.getText());
//            line.endPos_x = Integer.parseInt(overlayLineX2.getText());
//            line.endPos_y = Integer.parseInt(overlayLineY2.getText());
//            line.color = overlayColorOptions[overlayLineColor.getSelectedIndex()];
//            line.width = Integer.parseInt(overlayLineWidth.getText());
//
//            int overlayHandle = RealScan_JNI.RS_AddOverlayLine(deviceHandle, line);
//            if (RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//                statusField.setText(errStr);
//            }
//
//            RealScan_JNI.RS_ShowOverlay(overlayHandle, true);
//            if (RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//                statusField.setText(errStr);
//            }
//        } else {
//            statusField.setText("It's not working on Linux");
//        }
//    }//GEN-LAST:event_showLineBtnActionPerformed
//
//    private void showCrossBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showCrossBtnActionPerformed
//        if(System.getProperty("os.name").contains("Windows")) {
//            RealScan_JNI.RSOverlayCross cross = new RealScan_JNI.RSOverlayCross();
//            cross.centerPos_x = Integer.parseInt(overlayCrossX.getText());
//            cross.centerPos_y = Integer.parseInt(overlayCrossY.getText());
//            cross.rangeX = Integer.parseInt(overlayCrossDx.getText());
//            cross.rangeY = Integer.parseInt(overlayCrossDy.getText());
//            cross.color = overlayColorOptions[overlayCrossColor.getSelectedIndex()];
//            cross.width = Integer.parseInt(overlayCrossWidth.getText());
//
//            int overlayHandle = RealScan_JNI.RS_AddOverlayCross(deviceHandle, cross);
//            if (RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//                statusField.setText(errStr);
//            }
//
//            RealScan_JNI.RS_ShowOverlay(overlayHandle, true);
//            if (RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//                statusField.setText(errStr);
//            }
//        } else {
//            statusField.setText("It's not working on Linux");
//        }
//    }//GEN-LAST:event_showCrossBtnActionPerformed
//
//    private void showTextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTextBtnActionPerformed
//        if(System.getProperty("os.name").contains("Windows")) {
//            RealScan_JNI.RSOverlayText text = new RealScan_JNI.RSOverlayText();
//            text.pos_x = Integer.parseInt(overlayTextX.getText());
//            text.pos_y = Integer.parseInt(overlayTextY.getText());
//            text.alignment = overlayTextAlign.getSelectedIndex();
//            text.fontSize = fontSizeOptions[overlayTextSize.getSelectedIndex()];
//            text.color = overlayColorOptions[overlayTextColor.getSelectedIndex()];
//            text.fontName = "System";
//            text.text = overlayTextCont.getText();
//
//            int overlayHandle = RealScan_JNI.RS_AddOverlayText(deviceHandle, text);
//            if (RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//                statusField.setText(errStr);
//            }
//
//            RealScan_JNI.RS_ShowOverlay(overlayHandle, true);
//            if (RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//                statusField.setText(errStr);
//            }
//        } else {
//            statusField.setText("It's not working on Linux");
//        }
//    }//GEN-LAST:event_showTextBtnActionPerformed
//
//    private void PlayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayBtnActionPerformed
//        javax.swing.JFileChooser getDialog = new javax.swing.JFileChooser(".");
//
//        FileFilter filter = new FileFilter() {
//            public boolean accept(java.io.File f) {
//                if (f.isDirectory()) {
//                    return true;
//                }
//                else if (f.getName().toLowerCase().indexOf(".wav") > 0) {
//                    return true;
//                }
//                return false;
//            }
//
//            public String getDescription() {
//                return "wav FILE";
//            }
//        };
//        getDialog.addChoosableFileFilter(filter);
//        int selected = getDialog.showOpenDialog(this);
//
//        if (selected == javax.swing.JFileChooser.APPROVE_OPTION) {
//            java.io.File getfile = getDialog.getSelectedFile();
//
//            int result = RealScan_JNI.RS_PlayWav(deviceHandle, getfile.toString());
//            if (result != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(result);
//                statusField.setText(errStr);
//            }
//        }
//    }//GEN-LAST:event_PlayBtnActionPerformed
//
//    private void displayLcdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayLcdBtnActionPerformed
//        javax.swing.JFileChooser getDialog = new javax.swing.JFileChooser(".");
//
//        int result;
//        FileFilter filter = new FileFilter() {
//            public boolean accept(java.io.File f) {
//                if (f.isDirectory()) {
//                    return true;
//                }
//                if (f.getName().toLowerCase().indexOf(".r08") > 0) {
//                    return true;
//                }
//                return false;
//            }
//
//            public String getDescription() {
//                return "r08 FILE";
//            }
//        };
//        getDialog.addChoosableFileFilter(filter);
//        int selected = getDialog.showOpenDialog(this);
//
//        if (selected == javax.swing.JFileChooser.APPROVE_OPTION) {
//            java.io.File getfile = getDialog.getSelectedFile();
//
//            java.io.FileInputStream fis = null;
//            try {
//                fis = new java.io.FileInputStream(getfile);
//            } catch (java.io.FileNotFoundException e1) {
//                e1.printStackTrace();
//            }
//
//            byte[] inputImage = new byte[RealScan_JNI.RS_LCD_DATA_SIZE_MAX];
//            byte[] outputData = new byte[RealScan_JNI.RS_LCD_DATA_SIZE_MAX];
//
//            try {
//                if(fis!=null) {
//                    fis.available();
//                    fis.read(inputImage);
//                    fis.close();
//                }
//            } catch (java.io.IOException e1) {
//                e1.printStackTrace();
//            }
//
//            result = RealScan_JNI.RS_MakeLCDData(inputImage, inputImage, inputImage, RealScan_JNI.RS_LCD_WIDTH_MAX, RealScan_JNI.RS_LCD_HEIGHT_MAX, outputData);
//
//            if (result == RealScan_JNI.RS_SUCCESS) {
//                result = RealScan_JNI.RS_DisplayLCD(deviceHandle, outputData, RealScan_JNI.RS_LCD_DATA_SIZE_MAX, 0, 0, RealScan_JNI.RS_LCD_WIDTH_MAX, RealScan_JNI.RS_LCD_HEIGHT_MAX);
//                if (result == RealScan_JNI.RS_SUCCESS) {
//                    statusField.setText("Display LCD is successfully done!!");
//                } else {
//                    String errStr = RealScan_JNI.RS_GetErrString(result);
//                    statusField.setText(errStr);
//                }
//            } else {
//                String errStr = RealScan_JNI.RS_GetErrString(result);
//                statusField.setText(errStr);
//            }
//        }
//    }//GEN-LAST:event_displayLcdBtnActionPerformed
//
//    private void resetLDCBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetLDCBtnActionPerformed
//        int result = RealScan_JNI.RS_ResetLCD(deviceHandle);
//
//        if (result != RealScan_JNI.RS_SUCCESS) {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//        }
//    }//GEN-LAST:event_resetLDCBtnActionPerformed
//
//    private void BeepEmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BeepEmitBtnActionPerformed
//        int nBeepType = beepTypes[selBeepType.getSelectedIndex()];
//
//        int result = RealScan_JNI.RS_Beep(deviceHandle, nBeepType);
//        if (result != RealScan_JNI.RS_SUCCESS) {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//        }
//    }//GEN-LAST:event_BeepEmitBtnActionPerformed
//
//    private void statusLEDonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusLEDonBtnActionPerformed
//        int nStatusledColor = ledColors[selStatusLED.getSelectedIndex()];
//
//        int result = RealScan_JNI.RS_SetStatusLED(deviceHandle, nStatusledColor);
//        if (result != RealScan_JNI.RS_SUCCESS) {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//        }
//    }//GEN-LAST:event_statusLEDonBtnActionPerformed
//
//    private void fingerLEDoffBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fingerLEDoffBtnActionPerformed
//        int nFingerledType = fingerLedTypes[selFingerLED.getSelectedIndex()];
//
//        int result = RealScan_JNI.RS_SetFingerLED(deviceHandle, nFingerledType, RealScan_JNI.RS_LED_OFF);
//        if (result != RealScan_JNI.RS_SUCCESS) {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//        }
//    }//GEN-LAST:event_fingerLEDoffBtnActionPerformed
//
//    private void fingerLEDonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fingerLEDonBtnActionPerformed
//        int nFingerledType = fingerLedTypes[selFingerLED.getSelectedIndex()];
//        int nLedColor = ledColors[selLEDCol.getSelectedIndex()];
//
//        int result = RealScan_JNI.RS_SetFingerLED(deviceHandle, nFingerledType, nLedColor);
//        if (result == RealScan_JNI.RS_SUCCESS) {
//            statusField.setText("Setting Finger LED is successfully done!!");
//        } else {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//        }
//    }//GEN-LAST:event_fingerLEDonBtnActionPerformed
//
//    private void modeLEDoffBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeLEDoffBtnActionPerformed
//        int result = RealScan_JNI.RS_SetModeLED(deviceHandle, RealScan_JNI.RS_LED_OFF, false);
//        if (result != RealScan_JNI.RS_SUCCESS) {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//        }
//    }//GEN-LAST:event_modeLEDoffBtnActionPerformed
//
//    private void modeLEDonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeLEDonBtnActionPerformed
//        int nModeledType = modeLedTypes[selModeLED.getSelectedIndex()];
//
//        int result = RealScan_JNI.RS_SetModeLED(deviceHandle, nModeledType, true);
//        if (result == RealScan_JNI.RS_SUCCESS) {
//            statusField.setText("Setting Mode LED is successfully done!!");
//        } else {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//        }
//    }//GEN-LAST:event_modeLEDonBtnActionPerformed
//
//    private void readKeyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readKeyBtnActionPerformed
//        int keyCodeT = RealScan_JNI.RS_GetKeyStatus(deviceHandle);
//
//        String str = Integer.toString(keyCodeT);
//        keyStatusField.setText(str);
//    }//GEN-LAST:event_readKeyBtnActionPerformed
//
//    private void activeKeyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activeKeyBtnActionPerformed
//        int m_keyMask = keyCodeOptions[keyMask.getSelectedIndex()];
//
//        int result = RealScan_JNI.RS_SetActiveKey(deviceHandle, m_keyMask);
//        if (result == RealScan_JNI.RS_SUCCESS) {
//            statusField.setText("Activating Key is successfully done!!");
//        } else {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//        }
//
//        RealScan_JNI.RS_RegisterKeypadCallback(deviceHandle, true);
//    }//GEN-LAST:event_activeKeyBtnActionPerformed
//
//    private void CalibBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalibBtnActionPerformed
//        int result = RealScan_JNI.RS_Calibrate(deviceHandle);
//        if (result == RealScan_JNI.RS_SUCCESS) {
//            statusField.setText("Calibration is successfully done!!");
//        } else {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//        }
//    }//GEN-LAST:event_CalibBtnActionPerformed
//
//    private void selfTestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selfTestBtnActionPerformed
//        int tmpTestType = -1;
//
//        if (selectTestType.getSelectedIndex() == 0) {
//            tmpTestType = RealScan_JNI.RS_SELFTEST_ILLUMINATION;
//        } else if (selectTestType.getSelectedIndex() == 1) {
//            tmpTestType = RealScan_JNI.RS_SELFTEST_DIRT;
//        }
//
//        int result = RealScan_JNI.RS_SelfTest(deviceHandle, tmpTestType);
//
//        if (result == RealScan_JNI.RS_SUCCESS) {
//            statusField.setText("Self Test is successfully done!!");
//        } else {
//            String errStr = RealScan_JNI.RS_GetErrString(result);
//            statusField.setText(errStr);
//        }
//    }//GEN-LAST:event_selfTestBtnActionPerformed
//
//    Runnable DoSequenceCapture = new Runnable() {
//        @Override
//        public void run() {
//            // 1) variables initialize
//            int res = RealScan_JNI.RS_SUCCESS;
//            String resString;
//            RealScan_JNI.RSImageInfo imageInfo = new RealScan_JNI.RSImageInfo();
//            int numOfFingers = 0;
//            RealScan_JNI.RSSlapInfo[] slapInfoArray = new RealScan_JNI.RSSlapInfo[4];
//
//            for (int i = 0; i < 4; i++) {
//                slapInfoArray[i] = new RealScan_JNI.RSSlapInfo();
//            }
//            RealScan_JNI.RSImageInfo[] imageInfoArray = new RealScan_JNI.RSImageInfo[4];
//            for(int i=0;i<4;i++)
//            {
//                imageInfoArray[i] = new RealScan_JNI.RSImageInfo();
//            }
//
//            clearSegmentedImagePanels();
//            clearSeqCheckTargetImages();
//
//            // 2) scanning left four fingers
//            res = RealScan_JNI.RS_SetCaptureMode(deviceHandle, RealScan_JNI.RS_CAPTURE_FLAT_LEFT_FOUR_FINGERS, RealScan_JNI.RS_AUTO_SENSITIVITY_NORMAL, true);
//            if(res != RealScan_JNI.RS_SUCCESS) {
//                statusField.setText("capture mode setting failed(error : " + RealScan_JNI.RS_GetErrString(res) + ")");
//                return;
//            }
//            statusField.setText("Place your left four fingers on the sensor");
//
//            res = RealScan_JNI.RS_TakeImageData(deviceHandle, 20000, imageInfo);
//            if (res != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(res);
//                statusField.setText(errStr);
//                return;
//            }
//
//            if(imageInfo.pbyImgBuf == null || imageInfo.imageWidth == 0 || imageInfo.imageHeight == 0) {
//                statusField.setText("Image is empty!");
//                return;
//            }
//
//            setImagePanel(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight);
//
//            // 3) save target image(left) of sequence check
//            numOfFingers = RealScan_JNI.RS_Segment(imageInfo, RealScan_JNI.RS_SLAP_LEFT_FOUR, numOfFingers, slapInfoArray, imageInfoArray);
//            saveSeqCheckTargetImages(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight, RealScan_JNI.RS_SLAP_LEFT_FOUR, 4);
//            setSegmentedImagePanel(RealScan_JNI.RS_SLAP_LEFT_FOUR, slapInfoArray, imageInfoArray, numOfFingers);
//            statusField.setText("Left 4 fingers captured successfully");
//
//            try {
//                Thread.sleep(1);
//            } catch (InterruptedException e) {
//                e.printStackTrace();
//            }
//
//            // 4) scanning right four fingers
//            res = RealScan_JNI.RS_SetCaptureMode(deviceHandle, RealScan_JNI.RS_CAPTURE_FLAT_RIGHT_FOUR_FINGERS, RealScan_JNI.RS_AUTO_SENSITIVITY_NORMAL, true);
//            if(res != RealScan_JNI.RS_SUCCESS) {
//                statusField.setText("capture mode setting failed(error : " + RealScan_JNI.RS_GetErrString(res) + ")");
//                return;
//            }
//            statusField.setText("Place your right four fingers on the sensor");
//
//            res = RealScan_JNI.RS_TakeImageData(deviceHandle, 20000, imageInfo);
//            if (res != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(res);
//                statusField.setText(errStr);
//                return;
//            }
//
//            if(imageInfo.pbyImgBuf == null || imageInfo.imageWidth == 0 || imageInfo.imageHeight == 0) {
//                statusField.setText("Image is empty!");
//                return;
//            }
//
//            setImagePanel(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight);
//
//            // 5) do sequence check & save target image(right) of sequence check
//            statusField.setText("Sequence Checking is running now...");
//            numOfFingers = RealScan_JNI.RS_Segment(imageInfo, RealScan_JNI.RS_SLAP_RIGHT_FOUR, numOfFingers, slapInfoArray, imageInfoArray);
//            resString = sequenceCheckProcess2(imageInfoArray, numOfFingers);
//
//            for(int i=0; i<pFingerMsg.length; i++) {
//                if(resString.equals(pFingerMsg[i])) {
//                    statusField.setText(pFingerMsg[i] + " finger is already scanned!");
//                    return;
//                }
//            }
//
//            saveSeqCheckTargetImages(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight, RealScan_JNI.RS_SLAP_RIGHT_FOUR, 4);
//            setSegmentedImagePanel(RealScan_JNI.RS_SLAP_RIGHT_FOUR, slapInfoArray, imageInfoArray, numOfFingers);
//            statusField.setText("Right 4 fingers captured successfully");
//
//            // 6) scanning two thumbs
//            res = RealScan_JNI.RS_SetCaptureMode(deviceHandle, RealScan_JNI.RS_CAPTURE_FLAT_TWO_FINGERS, RealScan_JNI.RS_AUTO_SENSITIVITY_NORMAL, true);
//            if(res != RealScan_JNI.RS_SUCCESS) {
//                statusField.setText("capture mode setting failed(error : " + RealScan_JNI.RS_GetErrString(res) + ")");
//                return;
//            }
//            statusField.setText("Place your two thumbs on the sensor");
//
//            res = RealScan_JNI.RS_TakeImageData(deviceHandle, 20000, imageInfo);
//            if (res != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(res);
//                statusField.setText(errStr);
//                return;
//            }
//
//            if(imageInfo.pbyImgBuf == null || imageInfo.imageWidth == 0 || imageInfo.imageHeight == 0) {
//                statusField.setText("Image is empty!");
//                return;
//            }
//
//            setImagePanel(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight);
//
//            // 7) do sequence check & save target image(right) of sequence check
//            statusField.setText("Sequence Checking is running now...");
//            numOfFingers = RealScan_JNI.RS_Segment(imageInfo, RealScan_JNI.RS_SLAP_TWO_THUMB, numOfFingers, slapInfoArray, imageInfoArray);
//            resString = sequenceCheckProcess2(imageInfoArray, numOfFingers);
//
//            for(int i=0; i<pFingerMsg.length; i++) {
//                if(resString.equals(pFingerMsg[i])) {
//                    statusField.setText(pFingerMsg[i] + " finger is already scanned!");
//                    return;
//                }
//            }
//
//            saveSeqCheckTargetImages(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight, RealScan_JNI.RS_SLAP_TWO_THUMB, 2);
//            setSegmentedImagePanel(RealScan_JNI.RS_SLAP_TWO_THUMB, slapInfoArray, imageInfoArray, numOfFingers); // RS_SLAP_RIGHT_FOUR
//            statusField.setText("2 thumbs captured successfully");
//        }
//    };
//
//    private void btnStartSeqCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartSeqCheckActionPerformed
//        Thread t = new Thread(DoSequenceCapture);
//        t.start();
//    }//GEN-LAST:event_btnStartSeqCheckActionPerformed
//
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(RealScanTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(RealScanTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(RealScanTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(RealScanTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                RealScanTest test = new RealScanTest();
//                RealScan_JNI jni = new RealScan_JNI(test, true);
//                RealScan_JNI.RS_JNI_Init(jni);
//                System.out.println("init ::");
//                new RealScanTest().setVisible(true);
//            }
//        });
//    }
//
//    public boolean WINDOW = true;
//    DrawPanel drawCanvas = new DrawPanel();
//    java.awt.Image img = null;
//    private final Object syncImg = new Object();
//
//    public static class segFP {
//        public int slapType;
//        public java.awt.Image image;
//        public byte[] rawdata;
//        public int width;
//        public int height;
//    }
//
//    segFP[] segFPImages = new segFP[10];
//
//    DrawPanel LTCanvas = new DrawPanel();
//    DrawPanel LICanvas = new DrawPanel();
//    DrawPanel LMCanvas = new DrawPanel();
//    DrawPanel LRCanvas = new DrawPanel();
//    DrawPanel LLCanvas = new DrawPanel();
//    DrawPanel RTCanvas = new DrawPanel();
//    DrawPanel RICanvas = new DrawPanel();
//    DrawPanel RMCanvas = new DrawPanel();
//    DrawPanel RRCanvas = new DrawPanel();
//    DrawPanel RLCanvas = new DrawPanel();
//
//    String[] pFingerMsg = {
//        "None",
//        "Right Thumb",
//        "Right Index",
//        "Right Middle",
//        "Right Ring",
//        "Right Little",
//        "Left Thumb",
//        "Left Index",
//        "Left Middle",
//        "Left Ring",
//        "Left Little"
//    };
//
//    int numOfDevice;
//    int deviceHandle;
//    //byte[] imageBuffer = new byte[2250 * 2250 + 1078];
//
//    int[] modeLedTypes = new int[]{RealScan_JNI.RS_LED_MODE_ALL, RealScan_JNI.RS_LED_MODE_LEFT_FINGER4, RealScan_JNI.RS_LED_MODE_RIGHT_FINGER4,
//        RealScan_JNI.RS_LED_MODE_TWO_THUMB, RealScan_JNI.RS_LED_MODE_ROLL, RealScan_JNI.RS_LED_POWER};
//    int[] fingerLedTypes = new int[]{RealScan_JNI.RS_FINGER_ALL, RealScan_JNI.RS_FINGER_LEFT_LITTLE, RealScan_JNI.RS_FINGER_LEFT_RING, RealScan_JNI.RS_FINGER_LEFT_MIDDLE,
//        RealScan_JNI.RS_FINGER_LEFT_INDEX, RealScan_JNI.RS_FINGER_LEFT_THUMB, RealScan_JNI.RS_FINGER_RIGHT_THUMB, RealScan_JNI.RS_FINGER_RIGHT_INDEX,
//        RealScan_JNI.RS_FINGER_RIGHT_MIDDLE, RealScan_JNI.RS_FINGER_RIGHT_RING, RealScan_JNI.RS_FINGER_RIGHT_LITTLE, RealScan_JNI.RS_FINGER_TWO_THUMB,
//        RealScan_JNI.RS_FINGER_LEFT_FOUR, RealScan_JNI.RS_FINGER_RIGHT_FOUR};
//    int[] ledColors = new int[]{RealScan_JNI.RS_LED_GREEN, RealScan_JNI.RS_LED_RED, RealScan_JNI.RS_LED_YELLOW};
//    int[] beepTypes = new int[]{RealScan_JNI.RS_BEEP_PATTERN_NONE, RealScan_JNI.RS_BEEP_PATTERN_1, RealScan_JNI.RS_BEEP_PATTERN_2};
//    int[] rollProfileOptions = new int[]{RealScan_JNI.RS_ROLL_PROFILE_LOW, RealScan_JNI.RS_ROLL_PROFILE_NORMAL, RealScan_JNI.RS_ROLL_PROFILE_HIGH};
//    int[] rollDirectionOptions = new int[]{RealScan_JNI.RS_ROLL_DIR_L2R, RealScan_JNI.RS_ROLL_DIR_R2L, RealScan_JNI.RS_ROLL_DIR_AUTO, RealScan_JNI.RS_ROLL_DIR_AUTO_M};
//    int[] sensitivityOptions = new int[]{RealScan_JNI.RS_AUTO_SENSITIVITY_NORMAL, RealScan_JNI.RS_AUTO_SENSITIVITY_HIGH, RealScan_JNI.RS_AUTO_SENSITIVITY_HIGHER, RealScan_JNI.RS_AUTO_SENSITIVITY_DISABLED};
//    int[] fontSizeOptions = new int[]{8, 10, 12, 14, 16, 18, 20, 24, 28};
//    long[] overlayColorOptions = new long[]{0x00000000, 0x000000ff, 0x0000ff00, 0x00ff0000};
//    int[] keyCodeOptions = new int[]{RealScan_JNI.RS_REALSCANF_NO_KEY, RealScan_JNI.RS_REALSCANF_UP_KEY, RealScan_JNI.RS_REALSCANF_DOWN_KEY, RealScan_JNI.RS_REALSCANF_LEFT_KEY,
//        RealScan_JNI.RS_REALSCANF_RIGHT_KEY, RealScan_JNI.RS_REALSCANF_PLAY_KEY, RealScan_JNI.RS_REALSCANF_STOP_KEY, RealScan_JNI.RS_REALSCANF_FOOTSWITCH, RealScan_JNI.RS_REALSCANF_ALL_KEYS};
//
//    int[] captureModes = new int[] { RealScan_JNI.RS_CAPTURE_DISABLED, RealScan_JNI.RS_CAPTURE_ROLL_FINGER, RealScan_JNI.RS_CAPTURE_FLAT_SINGLE_FINGER, RealScan_JNI.RS_CAPTURE_FLAT_TWO_FINGERS,
//                                            RealScan_JNI.RS_CAPTURE_FLAT_LEFT_FOUR_FINGERS, RealScan_JNI.RS_CAPTURE_FLAT_RIGHT_FOUR_FINGERS, RealScan_JNI.RS_CAPTURE_FLAT_LEFT_PALM,
//                                            RealScan_JNI.RS_CAPTURE_FLAT_RIGHT_PALM, RealScan_JNI.RS_CAPTURE_FLAT_SINGLE_FINGER_EX, RealScan_JNI.RS_CAPTURE_FLAT_TWO_FINGERS_EX,
//                                            RealScan_JNI.RS_CAPTURE_FLAT_LEFT_SIDE_PALM, RealScan_JNI.RS_CAPTURE_FLAT_RIGHT_SIDE_PALM, RealScan_JNI.RS_CAPTURE_FLAT_LEFT_WRITERS_PALM,
//                                            RealScan_JNI.RS_CAPTURE_FLAT_RIGHT_WRITERS_PALM, RealScan_JNI.RS_CAPTURE_FLAT_MANUAL};
//    int[] captureDirections = new int[] { RealScan_JNI.RS_CAPTURE_DIRECTION_DEFAULT, RealScan_JNI.RS_CAPTURE_DIRECTION_LEFT, RealScan_JNI.RS_CAPTURE_DIRECTION_RIGHT };
//
//    boolean bIsCaptureModeSelected = false;
//    int nCaptureMode = -1;
//
//    int nCustomCaptX;
//    int nCustomCaptY;
//    int nCustomCaptWidth;
//    int nCustomCaptHeight;
//    int keyCode;
//    int nFingerCount = 0;
//    int nSlapType = 0;
//
//    byte[][] bSeqCheckTargetImages = new byte[5][];
//    int[] nSeqCheckTargetWidths = new int[5];
//    int[] nSeqCheckTargetHeights = new int[5];
//    int[] nSeqCheckTargetSlapTypes = new int[5];
//    int nNumOfTargetFingers = 0;
//    int nNumOfTargets;
//    Vector listData = new Vector();
//
//    boolean bIsPrevStarted = false;
//    enum PrevMode
//    {
//        directDraw,
//        prevCallbackDraw,
//        advPrevCallbackDraw,
//    }
//    PrevMode _selectedPrevMode;
//
//    Runnable DoAutoCapture = new Runnable() {
//
//        public void run() {
//            int result = RealScan_JNI.RS_SUCCESS;
//            startCaptureBtn.setEnabled(false);
//            setImageInitPanel();
//
//            RealScan_JNI.RSImageInfo imageInfo = new RealScan_JNI.RSImageInfo();
//
//            if (System.getProperty("os.name").contains("Windows")) {
//                result = RealScan_JNI.RS_RemoveAllOverlay(deviceHandle);
//            }
//
//            if(result == RealScan_JNI.RS_SUCCESS) {
//                result = RealScan_JNI.RS_TakeImageData(deviceHandle, 20000, imageInfo);
//            }
//
//            startCaptureBtn.setEnabled(true);
//
//            if (result != RealScan_JNI.RS_SUCCESS && result != RealScan_JNI.RS_WRN_TOO_POOR_QUALITY && result != RealScan_JNI.RS_WRN_BAD_SCAN
//                && result != RealScan_JNI.RS_ERR_SEGMENT_FEWER_FINGER && result != RealScan_JNI.RS_ERR_SEGMENT_WRONG_HAND ) {
//                String errStr = RealScan_JNI.RS_GetErrString(result);
//                statusField.setText(errStr);
//                return;
//            }
//
//            statusField.setText("An image is captured successfully");
//            setImagePanel(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight);
//            saveSeqCheckTargetImages(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight, nSlapType, nFingerCount);
//
//            if (selectResult.getSelectedIndex() == 1) // save
//                saveImageFile(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight);
//            else if(selectResult.getSelectedIndex() == 2) // segment
//                segmentImageResult(imageInfo);
//            else if(selectResult.getSelectedIndex() == 3) // segment & save
//                segmentedImageSaveResult(imageInfo);
//            else if(selectResult.getSelectedIndex() == 4) // sequence Check
//                sequenceCheckProcess(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight);
//        }
//    };
//
//    Runnable showPrevData = new Runnable() {
//        public void run() {
//            synchronized(syncImg) {
//                drawCanvas.main_img = img;
//            }
//            drawCanvas.update(drawCanvas.getGraphics());
//        }
//    };
//
//    public void setKeyCode(int keyCodeT) {
//        keyCode = keyCodeT;
//    }
//    public void initBtnStatus() {
//        initDeviceBtn.setEnabled(false);
//        exitDeviceBtn.setEnabled(false);
//        startCaptureBtn.setEnabled(false);
//        stopCaptureBtn.setEnabled(false);
//        takeCaptureBtn.setEnabled(false);
//        takeAutoCaptureBtn.setEnabled(false);
//    }
//
//    public void setImageInitPanel() {
//        drawCanvas.main_img = null;
//        statusField.setText("");
//        drawCanvas.update(drawCanvas.getGraphics());
//    }
//
//    public void setImagePanel(byte[] imgByte, int imageWidth, int imageHeight) {
//        int nWidth = imageWidth;
//        int nHeight = imageHeight;
//
//        if (nWidth % 4 != 0) nWidth -= nWidth % 4;
//
//        byte[] bData = new byte[nWidth*nHeight];
//
//        for (int i = 0; i < nHeight; i++)
//        {
//            for (int j = 0; j < nWidth; j++)
//                bData[i * nWidth + j] = imgByte[i * imageWidth + j];
//        }
//
//        byte[] imageBuffer = new byte[nWidth * nHeight + 1078];
//
//        int result = RealScan_JNI.RS_SaveBitmapMem(bData, nWidth, nHeight, imageBuffer);
//        if (result == RealScan_JNI.RS_SUCCESS) {
//            try {
//                synchronized(syncImg) {
//                    img = javax.imageio.ImageIO.read(new java.io.ByteArrayInputStream(imageBuffer));
//                }
//            } catch (java.io.IOException e) {
//                e.printStackTrace();
//            }
//
//            SwingUtilities.invokeLater(showPrevData);
//        }
//    }
//
//    public void clearSegmentedImagePanels()
//    {
//        for (int i = 0; i < segFPImages.length; i++) {
//            segFPImages[i].slapType = RealScan_JNI.RS_FGP_UNKNOWN;
//            segFPImages[i].image = null;
//            segFPImages[i].rawdata = null;
//            segFPImages[i].width = 0;
//            segFPImages[i].height = 0;
//        }
//
//        LTCanvas.main_img = null;
//        LTCanvas.update(LTCanvas.getGraphics());
//        LICanvas.main_img = null;
//        LICanvas.update(LICanvas.getGraphics());
//        LMCanvas.main_img = null;
//        LMCanvas.update(LMCanvas.getGraphics());
//        LRCanvas.main_img = null;
//        LRCanvas.update(LRCanvas.getGraphics());
//        LLCanvas.main_img = null;
//        LLCanvas.update(LLCanvas.getGraphics());
//
//        RTCanvas.main_img = null;
//        RTCanvas.update(RTCanvas.getGraphics());
//        RICanvas.main_img = null;
//        RICanvas.update(RICanvas.getGraphics());
//        RMCanvas.main_img = null;
//        RMCanvas.update(RMCanvas.getGraphics());
//        RRCanvas.main_img = null;
//        RRCanvas.update(RRCanvas.getGraphics());
//        RLCanvas.main_img = null;
//        RLCanvas.update(RLCanvas.getGraphics());
//    }
//
//    public void setSegmentedImagePanel(int slapType, RealScan_JNI.RSSlapInfo[] slapInfo, RealScan_JNI.RSImageInfo[] imageInfo, int numOfFingers) {
//
//        for(int i=0; i<numOfFingers; i++)
//        {
//            int idx = slapInfo[i].fingerType - 1;
//            int nWidth = imageInfo[i].imageWidth;
//            int nHeight = imageInfo[i].imageHeight;
//
//            segFPImages[idx].width = nWidth;
//            segFPImages[idx].height = nHeight;
//            segFPImages[idx].rawdata = new byte[nWidth*nHeight];
//            System.arraycopy(imageInfo[i].pbyImgBuf, 0, segFPImages[idx].rawdata, 0, nWidth*nHeight);
//
//            if (nWidth % 4 != 0) nWidth -= nWidth % 4;
//            byte[] bData = new byte[nWidth*nHeight];
//            byte[] bmpBuf = new byte[nWidth * nHeight + 1078];
//
//            for (int n = 0; n < nHeight; n++) {
//                for (int m = 0; m < nWidth; m++) {
//                    bData[n * nWidth + m] = imageInfo[i].pbyImgBuf[n * imageInfo[i].imageWidth + m];
//                }
//            }
//
//            int result = RealScan_JNI.RS_SaveBitmapMem(bData, nWidth, nHeight, bmpBuf);
//            if (result == RealScan_JNI.RS_SUCCESS) {
//                try {
//                    segFPImages[idx].slapType = slapInfo[i].fingerType;
//                    segFPImages[idx].image = javax.imageio.ImageIO.read(new java.io.ByteArrayInputStream(bmpBuf));
//                } catch (java.io.IOException e) {
//                    e.printStackTrace();
//                }
//
//                SwingUtilities.invokeLater(showSegmentFP);
//            }
//        }
//    }
//
//    Runnable showSegmentFP = new Runnable() {
//        public void run() {
//            for(int i=0; i<segFPImages.length; i++) {
//                if(segFPImages[i].image != null)
//                {
//                    switch (segFPImages[i].slapType) {
//                        case RealScan_JNI.RS_FGP_LEFT_THUMB:
//                            LTCanvas.main_img = segFPImages[i].image;
//                            LTCanvas.update(LTCanvas.getGraphics());
//                            break;
//                        case RealScan_JNI.RS_FGP_LEFT_INDEX:
//                            LICanvas.main_img = segFPImages[i].image;
//                            LICanvas.update(LICanvas.getGraphics());
//                            break;
//                        case RealScan_JNI.RS_FGP_LEFT_MIDDLE:
//                            LMCanvas.main_img = segFPImages[i].image;
//                            LMCanvas.update(LMCanvas.getGraphics());
//                            break;
//                        case RealScan_JNI.RS_FGP_LEFT_RING:
//                            LRCanvas.main_img = segFPImages[i].image;
//                            LRCanvas.update(LRCanvas.getGraphics());
//                            break;
//                        case RealScan_JNI.RS_FGP_LEFT_LITTLE:
//                            LLCanvas.main_img = segFPImages[i].image;
//                            LLCanvas.update(LLCanvas.getGraphics());
//                            break;
//                        case RealScan_JNI.RS_FGP_RIGHT_THUMB:
//                            RTCanvas.main_img = segFPImages[i].image;
//                            RTCanvas.update(RTCanvas.getGraphics());
//                            break;
//                        case RealScan_JNI.RS_FGP_RIGHT_INDEX:
//                            RICanvas.main_img = segFPImages[i].image;
//                            RICanvas.update(RICanvas.getGraphics());
//                            break;
//                        case RealScan_JNI.RS_FGP_RIGHT_MIDDLE:
//                            RMCanvas.main_img = segFPImages[i].image;
//                            RMCanvas.update(RMCanvas.getGraphics());
//                            break;
//                        case RealScan_JNI.RS_FGP_RIGHT_RING:
//                            RRCanvas.main_img = segFPImages[i].image;
//                            RRCanvas.update(RRCanvas.getGraphics());
//                            break;
//                        case RealScan_JNI.RS_FGP_RIGHT_LITTLE:
//                            RLCanvas.main_img = segFPImages[i].image;
//                            RLCanvas.update(RLCanvas.getGraphics());
//                            break;
//                        default:
//                            break;
//                    }
//                }
//            }
//        }
//    };
//
//    public void saveWSQFile(byte[] data, int width, int height, String filePath) {
//        float fRatio = 1.5f;
//        int wsqBufferLen = 0;
//        byte[] wsqBuffer = new byte[width * height];
//
//        wsqBufferLen = RealScan_JNI.RS_EncodeWSQ(data, width, height, fRatio, wsqBuffer);
//
//        if(wsqBufferLen > 0)
//        {
//            try {
//                FileOutputStream fs = new FileOutputStream(filePath);
//                fs.write(wsqBuffer);
//                fs.close();
//            } catch (FileNotFoundException ex) {
//                Logger.getLogger(RealScanTest.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (IOException ex) {
//                Logger.getLogger(RealScanTest.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
//
//        /*
//        // save decoded image (just for example)
//        RealScan_JNI.RSImageInfo rawImage = new RealScan_JNI.RSImageInfo();
//        int res = RealScan_JNI.RS_DecodeWSQ(wsqBuffer, wsqBufferLen, rawImage);
//        if(res == RealScan_JNI.RS_SUCCESS) {
//            try {
//                FileOutputStream fs = new FileOutputStream("decoded.raw");
//                fs.write(rawImage.pbyImgBuf);
//                fs.close();
//            } catch (FileNotFoundException ex) {
//                Logger.getLogger(RealScanTest.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (IOException ex) {
//                Logger.getLogger(RealScanTest.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
//        */
//    }
//
//    public void saveImageFile(byte[] imgByte, int imageWidth, int imageHeight) {
//        int result;
//        if (selectResult.getSelectedIndex() == 1) // save image
//        {
//            final String file_ext;
//            final String file_type;
//            if(btnWSQType.isSelected()) {
//                file_ext = ".wsq";
//                file_type = "WSQ FILE";
//            } else  {
//                file_ext = ".bmp";
//                file_type = "BMP FILE";
//            }
//
//            javax.swing.JFileChooser saveDialog = new javax.swing.JFileChooser(".");
//
//            FileFilter filter = new FileFilter() {
//                public boolean accept(java.io.File f) {
//                    if (f.isDirectory()) {
//                        return true;
//                    }
//                    return f.getName().toLowerCase().indexOf(file_ext) > 0;
//                }
//
//                public String getDescription() {
//                    return file_type;
//                }
//            };
//            saveDialog.addChoosableFileFilter(filter);
//            int selected = saveDialog.showOpenDialog(this.getParent());
//
//            if (selected == javax.swing.JFileChooser.APPROVE_OPTION) {
//                java.io.File savefile = saveDialog.getSelectedFile();
//                if (savefile.getName().indexOf('.') == -1) {
//                    savefile = new java.io.File(savefile.getAbsolutePath() + file_ext);
//                }
//                if(file_ext == ".bmp")
//                {
//                    result = RealScan_JNI.RS_SaveBitmap(imgByte, imageWidth, imageHeight, savefile.getPath());
//                    if (result != RealScan_JNI.RS_SUCCESS) {
//                        String errStr = RealScan_JNI.RS_GetErrString(result);
//                        statusField.setText(errStr);
//                    }
//                }
//                else
//                {
//                    saveWSQFile(imgByte, imageWidth, imageHeight, savefile.getPath());
//                }
//            }
//        }
//    }
//
//    public void segmentImageResult(RealScan_JNI.RSImageInfo imageInfo) {
//        if (selectResult.getSelectedIndex() == 2) // segment
//        {
//            int slapType;//left slap
//            int numOfFingers = -1;
//            RealScan_JNI.RSSlapInfo[] slapInfoArray = new RealScan_JNI.RSSlapInfo[4];
//            for (int i = 0; i < 4; i++) {
//                slapInfoArray[i] = new RealScan_JNI.RSSlapInfo();
//            }
//
//            int fingerType = 0;
//            int[] missingFingerArr = new int[] {0, 0, 0, 0};
//            RealScan_JNI.RSImageInfo[] imageInfoArray = new RealScan_JNI.RSImageInfo[4];
//            for(int i=0;i<4;i++)
//            {
//                imageInfoArray[i] = new RealScan_JNI.RSImageInfo();
//            }
//
//            int n = 0;
//            int[] captureMode_result = RealScan_JNI.RS_GetCaptureMode(deviceHandle);
//            switch (captureMode_result[0]) {
//                case RealScan_JNI.RS_CAPTURE_FLAT_SINGLE_FINGER:
//                case RealScan_JNI.RS_CAPTURE_FLAT_SINGLE_FINGER_EX:
//                case RealScan_JNI.RS_CAPTURE_ROLL_FINGER:
//                case RealScan_JNI.RS_CAPTURE_ROLL_FINGER_EX:
//                    slapType = RealScan_JNI.RS_SLAP_ONE_FINGER;
//                    break;
//                case RealScan_JNI.RS_CAPTURE_FLAT_TWO_FINGERS:
//                case RealScan_JNI.RS_CAPTURE_FLAT_TWO_FINGERS_EX:
//                    slapType = RealScan_JNI.RS_SLAP_TWO_THUMB;
//                    break;
//                case RealScan_JNI.RS_CAPTURE_FLAT_LEFT_FOUR_FINGERS:
//                    slapType = RealScan_JNI.RS_SLAP_LEFT_FOUR;
//                    if(ctLeftLittle.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_LEFT_LITTLE;
//                    if(ctLeftRing.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_LEFT_RING;
//                    if(ctLeftMiddle.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_LEFT_MIDDLE;
//                    if(ctLeftIndex.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_LEFT_INDEX;
//                    fingerType = RealScan_JNI.RS_FGP_LEFT_LITTLE;
//                    break;
//                case RealScan_JNI.RS_CAPTURE_FLAT_RIGHT_FOUR_FINGERS:
//                    slapType = RealScan_JNI.RS_SLAP_RIGHT_FOUR;
//                    if(ctRightIndex.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_RIGHT_INDEX;
//                    if(ctRightMiddle.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_RIGHT_MIDDLE;
//                    if(ctRightRing.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_RIGHT_RING;
//                    if(ctRightLittle.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_RIGHT_LITTLE;
//                    fingerType = RealScan_JNI.RS_FGP_RIGHT_INDEX;
//                    break;
//
//                default:
//                    statusField.setText("Cannot segment in this mode");
//                    return;
//            }
//            if(customSegCheck.isSelected())
//                numOfFingers = RealScan_JNI.RS_SegmentWithSize(imageInfo, slapType, numOfFingers, slapInfoArray, imageInfoArray, Integer.parseInt(customSegWidth.getText()), Integer.parseInt(customSegHeight.getText()));
//            else
//                numOfFingers = RealScan_JNI.RS_Segment(imageInfo, slapType, numOfFingers, slapInfoArray, imageInfoArray);
//
//            if(numOfFingers < 0) {
//                statusField.setText("Segmentation failed");
//                return;
//            }
//
//            StringBuilder segResult = new StringBuilder();
//            int j = 0;
//            for(int i=0; i<numOfFingers; i++)
//            {
//                if(slapInfoArray[i].fingerType == RealScan_JNI.RS_FGP_UNKNOWN)
//                {
//                    if(slapType == RealScan_JNI.RS_SLAP_LEFT_FOUR)
//                    {
//                        while(fingerType == missingFingerArr[j])
//                        {
//                            fingerType--;
//                            j++;
//                        }
//                        slapInfoArray[i].fingerType = fingerType--;
//                    }
//                    else if(slapType == RealScan_JNI.RS_SLAP_RIGHT_FOUR)
//                    {
//                        while(fingerType == missingFingerArr[j])
//                        {
//                            fingerType++;
//                            j++;
//                        }
//                        slapInfoArray[i].fingerType = fingerType++;
//                    }
//                }
//                segResult.append("[" + slapInfoArray[i].fingerType + ":" + slapInfoArray[i].imageQuality + "]");
//            }
//            statusField.setText(segResult.toString());
//        }
//    }
//
//    public void segmentedImageSaveResult(RealScan_JNI.RSImageInfo imageInfo) {
//        if (selectResult.getSelectedIndex() == 3) // segment & save
//        {
//            String filePath = "";
//            final JFileChooser fc = new JFileChooser();
//            int returnVal = fc.showSaveDialog(RealScanTest.this);
//
//            if(returnVal == JFileChooser.APPROVE_OPTION){
//               filePath = fc.getSelectedFile().getAbsoluteFile().toString();
//            }
//
//            if(filePath.compareTo("") != 0) {
//                RealScan_JNI.RS_SaveBitmap(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight, filePath + ".bmp");
//            }
//
//            int slapType;//left slap
//            int numOfFingers = -1;
//            RealScan_JNI.RSSlapInfo[] slapInfoArray = new RealScan_JNI.RSSlapInfo[4];
//            for (int i = 0; i < 4; i++) {
//                slapInfoArray[i] = new RealScan_JNI.RSSlapInfo();
//            }
//
//            int fingerType = 0;
//            int[] missingFingerArr = new int[] {0, 0, 0, 0};
//            RealScan_JNI.RSImageInfo[] imageInfoArray = new RealScan_JNI.RSImageInfo[4];
//            for(int i=0;i<4;i++){
//                imageInfoArray[i] = new RealScan_JNI.RSImageInfo();
//            }
//
//            int n = 0;
//            int[] captureMode_result = RealScan_JNI.RS_GetCaptureMode(deviceHandle);
//            switch (captureMode_result[0]) {
//                case RealScan_JNI.RS_CAPTURE_FLAT_SINGLE_FINGER:
//                case RealScan_JNI.RS_CAPTURE_FLAT_SINGLE_FINGER_EX:
//                case RealScan_JNI.RS_CAPTURE_ROLL_FINGER:
//                case RealScan_JNI.RS_CAPTURE_ROLL_FINGER_EX:
//                    slapType = RealScan_JNI.RS_SLAP_ONE_FINGER;
//                    break;
//                case RealScan_JNI.RS_CAPTURE_FLAT_TWO_FINGERS:
//                case RealScan_JNI.RS_CAPTURE_FLAT_TWO_FINGERS_EX:
//                    slapType = RealScan_JNI.RS_SLAP_TWO_THUMB;
//                    break;
//                case RealScan_JNI.RS_CAPTURE_FLAT_LEFT_FOUR_FINGERS:
//                    slapType = RealScan_JNI.RS_SLAP_LEFT_FOUR;
//                    if(ctLeftLittle.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_LEFT_LITTLE;
//                    if(ctLeftRing.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_LEFT_RING;
//                    if(ctLeftMiddle.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_LEFT_MIDDLE;
//                    if(ctLeftIndex.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_LEFT_INDEX;
//                    fingerType = RealScan_JNI.RS_FGP_LEFT_LITTLE;
//                    break;
//                case RealScan_JNI.RS_CAPTURE_FLAT_RIGHT_FOUR_FINGERS:
//                    slapType = RealScan_JNI.RS_SLAP_RIGHT_FOUR;
//                    if(ctRightIndex.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_RIGHT_INDEX;
//                    if(ctRightMiddle.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_RIGHT_MIDDLE;
//                    if(ctRightRing.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_RIGHT_RING;
//                    if(ctRightLittle.isSelected()) missingFingerArr[n++] = RealScan_JNI.RS_FGP_RIGHT_LITTLE;
//                    fingerType = RealScan_JNI.RS_FGP_RIGHT_INDEX;
//                    break;
//
//                default:
//                    statusField.setText("Cannot segment in this mode");
//                    return;
//            }
//
//            if(customSegCheck.isSelected())
//                numOfFingers = RealScan_JNI.RS_SegmentWithSize(imageInfo, slapType, numOfFingers, slapInfoArray, imageInfoArray, Integer.parseInt(customSegWidth.getText()), Integer.parseInt(customSegHeight.getText()));
//            else
//                numOfFingers = RealScan_JNI.RS_Segment(imageInfo, slapType, numOfFingers, slapInfoArray, imageInfoArray);
//
//            StringBuilder segResult = new StringBuilder();
//            int j = 0;
//            for(int i=0; i<numOfFingers; i++)
//            {
//                if(slapInfoArray[i].fingerType == RealScan_JNI.RS_FGP_UNKNOWN)
//                {
//                    if(slapType == RealScan_JNI.RS_SLAP_LEFT_FOUR)
//                    {
//                        while(fingerType == missingFingerArr[j])
//                        {
//                            System.out.println("finger :"+fingerType + " : "+ missingFingerArr[j]);
//                            fingerType--;
//                            j++;
//                        }
//                        System.out.println("finger after while 1:"+fingerType + " : "+ missingFingerArr[j]);
//                        slapInfoArray[i].fingerType = fingerType--;
//                    }
//                    else if(slapType == RealScan_JNI.RS_SLAP_RIGHT_FOUR)
//                    {
//                        while(fingerType == missingFingerArr[j])
//                        {
//                            fingerType++;
//                            j++;
//                        }
//                        slapInfoArray[i].fingerType = fingerType++;
//                    }
//                }
//                segResult.append("[" + slapInfoArray[i].fingerType + ":" + slapInfoArray[i].imageQuality + "]");
//
//                if(filePath.compareTo("") != 0)
//                {
//                    if(customSegCheck.isSelected())
//                        returnVal = RealScan_JNI.RS_SaveBitmap(imageInfoArray[i].pbyImgBuf, Integer.parseInt(customSegWidth.getText()), Integer.parseInt(customSegHeight.getText()), filePath + "_"+ slapInfoArray[i].fingerType + ".bmp");
//                    else
//                        returnVal = RealScan_JNI.RS_SaveBitmap(imageInfoArray[i].pbyImgBuf, imageInfoArray[i].imageWidth, imageInfoArray[i].imageHeight, filePath + "_"+ slapInfoArray[i].fingerType + ".bmp");
//                }
//            }
//            statusField.setText(segResult.toString());
//
//            if (RealScan_JNI.RS_GetLastError() != RealScan_JNI.RS_SUCCESS) {
//                String errStr = RealScan_JNI.RS_GetErrString(RealScan_JNI.RS_GetLastError());
//                statusField.setText(errStr);
//            }
//        }
//    }
//
//    public void clearSeqCheckTargetImages()
//    {
//        nNumOfTargets = 0;
//        nNumOfTargetFingers = 0;
//
//        for(int i=0; i<5; i++)
//        {
//            if(bSeqCheckTargetImages[i] != null) {
//                bSeqCheckTargetImages[i] = null;
//            }
//
//            nSeqCheckTargetWidths[i] = 0;
//            nSeqCheckTargetHeights[i] = 0;
//            nSeqCheckTargetSlapTypes[i] = 0;
//        }
//    }
//
//    public void saveSeqCheckTargetImages(byte[] imgByte, int imageWidth, int imageHeight, int slapType, int fingerCount)
//    {
//        if(slapType < RealScan_JNI.RS_SLAP_ONE_FINGER)
//        {
//            boolean bIsOverlapped = false;
//            int nOverlappedIndex = nNumOfTargets;
//            for(int i=0; i< nNumOfTargets; i++)
//            {
//                if(nSeqCheckTargetSlapTypes[i] == slapType)
//                {
//                    bIsOverlapped = true;
//                    nOverlappedIndex = i;
//                    break;
//                }
//            }
//
//            if(bIsOverlapped == true)
//            {
//                bSeqCheckTargetImages[nOverlappedIndex] = imgByte;
//                nSeqCheckTargetWidths[nOverlappedIndex] = imageWidth;
//                nSeqCheckTargetHeights[nOverlappedIndex] = imageHeight;
//            }
//            else
//            {
//                bSeqCheckTargetImages[nNumOfTargets] = new byte[imageWidth*imageHeight];
//                System.arraycopy(imgByte, 0, bSeqCheckTargetImages[nNumOfTargets], 0, imageWidth*imageHeight);
//                nSeqCheckTargetWidths[nNumOfTargets] = imageWidth;
//                nSeqCheckTargetHeights[nNumOfTargets] = imageHeight;
//                nSeqCheckTargetSlapTypes[nNumOfTargets] = slapType;
//
//                switch(slapType)
//                {
//                    case RealScan_JNI.RS_SLAP_TWO_THUMB:
//                        listData.addElement("TWO THUMBS");
//                        break;
//                    case RealScan_JNI.RS_SLAP_LEFT_FOUR:
//                        listData.addElement("LEFT FOUR FINGERS");
//                        break;
//                    case RealScan_JNI.RS_SLAP_RIGHT_FOUR:
//                        listData.addElement("RIGHT FOUR FINGERS");
//                        break;
//                }
//                seqTargetList.setListData(listData);
//                seqCheckPane.revalidate();
//                seqCheckPane.repaint();
//
//                nNumOfTargets++;
//                nNumOfTargetFingers += fingerCount;
//            }
//        }
//    }
//
//    public void sequenceCheckProcess(byte[] imageData, int imageWidth, int imageHeight)
//    {
//        int seqCheckResult = -1;
//        int nSecuLev = 5;	// (0~7)
//        int numOfSlaps = seqTargetList.getModel().getSize();
//
//        if(numOfSlaps == 0)
//            statusField.setText("There is no target image");
//        else
//        {
//            boolean bIsMatched = false;
//            for(int i=0; i< numOfSlaps; i++)
//            {
//                RealScan_JNI.RSImageInfo fingerImageInfo = new RealScan_JNI.RSImageInfo();
//                fingerImageInfo.pbyImgBuf = new byte[imageWidth * imageHeight];
//                fingerImageInfo.pbyImgBuf = imageData;
//                fingerImageInfo.imageWidth = imageWidth;
//                fingerImageInfo.imageHeight = imageHeight;
//
//                seqCheckResult = RealScan_JNI.RS_SequenceCheck(1, fingerImageInfo, bSeqCheckTargetImages[i], nSeqCheckTargetWidths[i], nSeqCheckTargetHeights[i], nSeqCheckTargetSlapTypes[i], nSecuLev);
//
//                if(seqCheckResult > 0)
//                {
//                    String seqRetMsg = "This finger is the " + pFingerMsg[seqCheckResult] + " finger";
//                    statusField.setText(seqRetMsg);
//                    bIsMatched = true;
//                    break;
//                }
//            }
//
//            if(!bIsMatched)
//                statusField.setText("There isn't matched finger");
//        }
//    }
//
//    public String sequenceCheckProcess2(RealScan_JNI.RSImageInfo[] imageInfo, int numOfFingers)
//    {
//        String retString = "There is no target image";
//
//        int seqCheckResult = -1;
//        int nSecuLev = 5;	// (0~7)
//
//        if(nNumOfTargets == 0)
//            return retString;
//
//        boolean bIsMatched = false;
//        for(int i=0; i< nNumOfTargets; i++)
//        {
//            for(int j=0; j<numOfFingers; j++) {
//                RealScan_JNI.RSImageInfo fingerImageInfo = new RealScan_JNI.RSImageInfo();
//                int nWidth = imageInfo[j].imageWidth;
//                int nHeight = imageInfo[j].imageHeight;
//                fingerImageInfo.pbyImgBuf = new byte[nWidth * nHeight];
//                fingerImageInfo.pbyImgBuf = imageInfo[j].pbyImgBuf;
//                fingerImageInfo.imageWidth = nWidth;
//                fingerImageInfo.imageHeight = nHeight;
//
//                seqCheckResult = RealScan_JNI.RS_SequenceCheck(1, fingerImageInfo, bSeqCheckTargetImages[i], nSeqCheckTargetWidths[i], nSeqCheckTargetHeights[i], nSeqCheckTargetSlapTypes[i], nSecuLev);
//
//                if(seqCheckResult > 0) {
//                    retString = pFingerMsg[seqCheckResult];
//                    bIsMatched = true;
//                    break;
//                }
//            }
//        }
//
//        if(!bIsMatched)
//            retString = "There isn't matched finger";
//
//        return retString;
//    }
//
//    public void windowActivated(WindowEvent arg0) {
//        if (!WINDOW) {
//            drawCanvas.drawFlag = true;
//            drawCanvas.update(drawCanvas.getGraphics());
//        }
//    }
//
//    public void windowClosed(WindowEvent arg0) {
//        if (!WINDOW) {
//            drawCanvas.drawFlag = false;
//        }
//    }
//
//    public void windowClosing(WindowEvent arg0) {
//        System.exit(0);
//    }
//
//    public void windowDeactivated(WindowEvent arg0) {
//        if (!WINDOW) {
//            drawCanvas.drawFlag = false;
//        }
//    }
//
//    public void windowDeiconified(WindowEvent arg0) {
//        if (!WINDOW) {
//            drawCanvas.drawFlag = false;
//        }
//    }
//
//    public void windowIconified(WindowEvent arg0) {
//        if (!WINDOW) {
//            drawCanvas.drawFlag = false;
//        }
//    }
//
//    public void windowOpened(WindowEvent arg0) {
//        if (!WINDOW) {
//            drawCanvas.drawFlag = true;
//            this.drawCanvas.update(drawCanvas.getGraphics());
//        }
//    }
//
//    public void initCaptureButtons() {
//        stopCaptureBtn.setEnabled(false);
//        takeCaptureBtn.setEnabled(false);
//        takeAutoCaptureBtn.setEnabled(true);
//        startCaptureBtn.setEnabled(true);
//    }
//
//    public void setMissingFingerType() {
//        int var = RealScan_JNI.RS_VAR_MISSING_FINGER_TYPE_NORMAL;
//        if(chkMissingFingerType.isSelected() == true) {
//            var = RealScan_JNI.RS_VAR_MISSING_FINGER_TYPE_STRICT;
//        }
//        RealScan_JNI.RS_SetParamInt(deviceHandle, RealScan_JNI.RS_VAR_MISSING_FINGER_TYPE, var);
//    }
//
//    public void setPreviewMode(java.awt.event.ActionEvent e) {
//        int result = 0;
//        Object sc = e.getSource();
//
//        if(sc == directDrawBtn)
//        {
//            if(System.getProperty("os.name").contains("Windows")) {
//                if(_selectedPrevMode == PrevMode.prevCallbackDraw)
//                    RealScan_JNI.RS_RegisterPreviewCallback(deviceHandle, this, null);
//                else if(_selectedPrevMode == PrevMode.advPrevCallbackDraw)
//                    RealScan_JNI.RS_RegisterAdvPreviewCallback(deviceHandle, this, null);
//
//                RealScan_JNI.RSRect rect = new RealScan_JNI.RSRect();
//                rect.startX = 0;
//                rect.startY = 0;
//                rect.width = 400;
//                rect.height = 400;
//                RealScan_JNI.RS_SetViewWindow(deviceHandle, drawCanvas, rect, true); // Only Window
//
//                bIsPrevStarted = true;
//                _selectedPrevMode = PrevMode.directDraw;
//            } else {
//                statusField.setText("RS_SetViewWindows API is supported on Windows");
//            }
//        }
//        else if(sc == prevCallbackBtn)
//        {
//            if(System.getProperty("os.name").contains("Windows")) {
//                if(_selectedPrevMode == PrevMode.directDraw)
//                    RealScan_JNI.RS_StopViewWindow(deviceHandle); // Only Window
//                else if(_selectedPrevMode == PrevMode.advPrevCallbackDraw)
//                    RealScan_JNI.RS_RegisterAdvPreviewCallback(deviceHandle, this, null);
//            } else {
//                if(_selectedPrevMode == PrevMode.advPrevCallbackDraw)
//                    RealScan_JNI.RS_RegisterAdvPreviewCallback(deviceHandle, this, null);
//            }
//
//            RealScan_JNI.RS_RegisterPreviewCallback(deviceHandle, this, "RSRawCapturePreviewCallback");
//            bIsPrevStarted = true;
//            _selectedPrevMode = PrevMode.prevCallbackDraw;
//        }
//        else if(sc == advPrevCallbackBtn)
//        {
//            if(System.getProperty("os.name").contains("Windows")) {
//                if(_selectedPrevMode == PrevMode.directDraw)
//                    RealScan_JNI.RS_StopViewWindow(deviceHandle); // Only Window
//                else if(_selectedPrevMode == PrevMode.prevCallbackDraw)
//                    RealScan_JNI.RS_RegisterPreviewCallback(deviceHandle, this, null);
//            } else {
//                if(_selectedPrevMode == PrevMode.prevCallbackDraw)
//                    RealScan_JNI.RS_RegisterPreviewCallback(deviceHandle, this, null);
//            }
//
//            RealScan_JNI.RS_RegisterAdvPreviewCallback(deviceHandle, this, "RSRawCaptureAdvPreviewCallback");
//            bIsPrevStarted = true;
//            _selectedPrevMode = PrevMode.advPrevCallbackDraw;
//        }
//    }
//
//
//    public void actionPerformed(java.awt.event.ActionEvent e) {
//        Object sc = e.getSource();
//    }
//
//    //
//    // Capture callback function(User edit function)
//    //
//    public void RSRawCaptureResultCallback( int deviceHandle, int errorCode, byte imageData[], int imageWidth, int imageHeight )
//    {
//        try {
//            Thread.sleep(1);
//        } catch (InterruptedException e) {
//            e.printStackTrace();
//        }
//
//        RealScan_JNI.RSImageInfo imageInfo = new RealScan_JNI.RSImageInfo();
//        imageInfo.pbyImgBuf = new byte[imageWidth*imageHeight];
//        imageInfo.pbyImgBuf = imageData;
//        imageInfo.imageWidth = imageWidth;
//        imageInfo.imageHeight = imageHeight;
//
//        statusField.setText("An image is captured successfully");
//        setImagePanel(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight);
//        saveSeqCheckTargetImages(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight, nSlapType, nFingerCount);
//
//        if (selectResult.getSelectedIndex() == 1) // save
//            saveImageFile(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight);
//        else if(selectResult.getSelectedIndex() == 2) // segment
//            segmentImageResult(imageInfo);
//        else if(selectResult.getSelectedIndex() == 3) // segment & save
//            segmentedImageSaveResult(imageInfo);
//        else if(selectResult.getSelectedIndex() == 4) // sequence check
//            sequenceCheckProcess(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight);
//
//        initCaptureButtons();
//    }
//
//    public void RSAdvCaptureResultCallback( int deviceHandle, int errorCode, byte imageData[], byte qualityMap[], int imageWidth, int imageHeight, int quality, int liveness)
//    {
//        try {
//            Thread.sleep(1);
//        } catch (InterruptedException e) {
//            e.printStackTrace();
//        }
//
//        RealScan_JNI.RSImageInfo imageInfo = new RealScan_JNI.RSImageInfo();
//        imageInfo.pbyImgBuf = new byte[imageWidth*imageHeight];
//        imageInfo.pbyImgBuf = imageData;
//        imageInfo.imageWidth = imageWidth;
//        imageInfo.imageHeight = imageHeight;
//
//        String strResult = "An image is captured successfully (score:" + liveness;
//        if(liveness >= 500) {
//            strResult += " / [LIVE] )";
//        } else {
//            strResult += " / [FAKE] )";
//        }
//
//        statusField.setText(strResult);
//        setImagePanel(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight);
//        saveSeqCheckTargetImages(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight, nSlapType, nFingerCount);
//
//        if (selectResult.getSelectedIndex() == 1) // save
//            saveImageFile(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight);
//        else if(selectResult.getSelectedIndex() == 2) // segment
//            segmentImageResult(imageInfo);
//        else if(selectResult.getSelectedIndex() == 3) // segment & save
//            segmentedImageSaveResult(imageInfo);
//        else if(selectResult.getSelectedIndex() == 4) // sequence check
//            sequenceCheckProcess(imageInfo.pbyImgBuf, imageInfo.imageWidth, imageInfo.imageHeight);
//
//        initCaptureButtons();
//    }
//
//    public void RSRawCapturePreviewCallback( int deviceHandle, int errorCode, byte imageData[], int imageWidth, int imageHeight )
//    {
//        try {
//            Thread.sleep(1);
//        } catch (InterruptedException e) {
//            e.printStackTrace();
//        }
//        /*synchronized (syncObj1)*/ {
//            /*frame.*/setImagePanel(imageData, imageWidth, imageHeight);
//        }
//    }
//
//    public void RSRawCaptureAdvPreviewCallback( int deviceHandle, int errorCode, byte imageData[], int imageWidth, int imageHeight, int quality, int status )
//    {
//        try {
//            Thread.sleep(1);
//        } catch (InterruptedException e) {
//            e.printStackTrace();
//        }
//        /*synchronized (syncObj1)*/ {
//            /*frame.*/setImagePanel(imageData, imageWidth, imageHeight);
//        }
//
//        String statusMsg = RealScan_JNI.RS_GetCaptureStatusString(status);
//        captureStatus.setText(statusMsg);
//    }
//
//    public void RSKeypadDataCallback( int deviceHandle, int keyCode )
//    {
//        try {
//            Thread.sleep(1);
//        } catch (InterruptedException e) {
//            e.printStackTrace();
//        }
//        /*frame.*/setKeyCode(keyCode);
//    }
//
//    // Variables declaration - do not modify//GEN-BEGIN:variables
//    private javax.swing.JCheckBox AdvContrastCheck;
//    private javax.swing.JCheckBox AutoCalibCheck;
//    private javax.swing.JPanel Beep;
//    private javax.swing.JButton BeepEmitBtn;
//    private javax.swing.JToggleButton CalibBtn;
//    private javax.swing.JButton ClearOverlayBtn;
//    private javax.swing.JTextField DeviceIDInfo;
//    private javax.swing.JTabbedPane FeatureTabPanel;
//    private javax.swing.JTextField FirmwareInfo;
//    private javax.swing.JTextField FirmwareInfoField;
//    private javax.swing.JButton GetCaptOptionBtn;
//    private javax.swing.JButton GetLFDlevelBtn;
//    private javax.swing.JButton GetRollCaptOptionBtn;
//    private javax.swing.JTextField HardwareInfo;
//    private javax.swing.JButton HideOverlayBtn;
//    private javax.swing.ButtonGroup ImageTypeGroup;
//    private javax.swing.JComboBox LFDLevel;
//    private javax.swing.JPanel Misc;
//    private javax.swing.JTextField ModelInfo;
//    private javax.swing.JButton PlayBtn;
//    private javax.swing.JTextField SDKInfoText;
//    private javax.swing.JButton SetCaptOptionBtn;
//    private javax.swing.JButton ShowAllOverlayBtn;
//    private javax.swing.JButton activeKeyBtn;
//    private javax.swing.JRadioButton advPrevCallbackBtn;
//    private javax.swing.JCheckBox autoCheck;
//    private javax.swing.JRadioButton btnBitmapType;
//    private javax.swing.JButton btnStartSeqCheck;
//    private javax.swing.JRadioButton btnWSQType;
//    private javax.swing.ButtonGroup buttonGroup1;
//    private javax.swing.JComboBox callbackMask;
//    private javax.swing.JPanel callbackOptTab;
//    private javax.swing.JPanel callbackPan;
//    private javax.swing.JTextField callbackPrint;
//    private javax.swing.JPanel capturePanel;
//    private javax.swing.JTextField captureSizeField;
//    private javax.swing.JLabel captureStatus;
//    private javax.swing.JCheckBox chkMissingFingerType;
//    private javax.swing.JCheckBox ctLeftIndex;
//    private javax.swing.JCheckBox ctLeftLittle;
//    private javax.swing.JCheckBox ctLeftMiddle;
//    private javax.swing.JCheckBox ctLeftRing;
//    private javax.swing.JCheckBox ctRightIndex;
//    private javax.swing.JCheckBox ctRightLittle;
//    private javax.swing.JCheckBox ctRightMiddle;
//    private javax.swing.JCheckBox ctRightRing;
//    private javax.swing.JTextField customHField;
//    private javax.swing.JCheckBox customSegCheck;
//    private javax.swing.JTextField customSegHeight;
//    private javax.swing.JTextField customSegWidth;
//    private javax.swing.JTextField customWField;
//    private javax.swing.JTextField customXField;
//    private javax.swing.JTextField customYField;
//    private javax.swing.JPanel deviceInfo;
//    private javax.swing.JTextField deviceNameField;
//    private javax.swing.JPanel devicePanel;
//    private javax.swing.JPanel deviceTab;
//    private javax.swing.JRadioButton directDrawBtn;
//    private javax.swing.JButton displayLcdBtn;
//    private javax.swing.JPanel drawPanel;
//    private javax.swing.JPanel drawSegLI;
//    private javax.swing.JPanel drawSegLL;
//    private javax.swing.JPanel drawSegLM;
//    private javax.swing.JPanel drawSegLR;
//    private javax.swing.JPanel drawSegLT;
//    private javax.swing.JPanel drawSegRI;
//    private javax.swing.JPanel drawSegRL;
//    private javax.swing.JPanel drawSegRM;
//    private javax.swing.JPanel drawSegRR;
//    private javax.swing.JPanel drawSegRT;
//    private javax.swing.JButton exitDeviceBtn;
//    private javax.swing.JPanel fingerLED;
//    private javax.swing.JButton fingerLEDoffBtn;
//    private javax.swing.JButton fingerLEDonBtn;
//    private javax.swing.JButton initDeviceBtn;
//    private javax.swing.JButton initSDKBtn;
//    private javax.swing.JPanel ioTab;
//    private javax.swing.JLabel jLabel1;
//    private javax.swing.JLabel jLabel10;
//    private javax.swing.JLabel jLabel11;
//    private javax.swing.JLabel jLabel12;
//    private javax.swing.JLabel jLabel13;
//    private javax.swing.JLabel jLabel14;
//    private javax.swing.JLabel jLabel15;
//    private javax.swing.JLabel jLabel16;
//    private javax.swing.JLabel jLabel17;
//    private javax.swing.JLabel jLabel18;
//    private javax.swing.JLabel jLabel19;
//    private javax.swing.JLabel jLabel2;
//    private javax.swing.JLabel jLabel20;
//    private javax.swing.JLabel jLabel21;
//    private javax.swing.JLabel jLabel22;
//    private javax.swing.JLabel jLabel23;
//    private javax.swing.JLabel jLabel24;
//    private javax.swing.JLabel jLabel25;
//    private javax.swing.JLabel jLabel26;
//    private javax.swing.JLabel jLabel27;
//    private javax.swing.JLabel jLabel28;
//    private javax.swing.JLabel jLabel29;
//    private javax.swing.JLabel jLabel3;
//    private javax.swing.JLabel jLabel30;
//    private javax.swing.JLabel jLabel31;
//    private javax.swing.JLabel jLabel32;
//    private javax.swing.JLabel jLabel33;
//    private javax.swing.JLabel jLabel34;
//    private javax.swing.JLabel jLabel35;
//    private javax.swing.JLabel jLabel36;
//    private javax.swing.JLabel jLabel37;
//    private javax.swing.JLabel jLabel38;
//    private javax.swing.JLabel jLabel39;
//    private javax.swing.JLabel jLabel4;
//    private javax.swing.JLabel jLabel40;
//    private javax.swing.JLabel jLabel41;
//    private javax.swing.JLabel jLabel42;
//    private javax.swing.JLabel jLabel43;
//    private javax.swing.JLabel jLabel44;
//    private javax.swing.JLabel jLabel45;
//    private javax.swing.JLabel jLabel46;
//    private javax.swing.JLabel jLabel47;
//    private javax.swing.JLabel jLabel48;
//    private javax.swing.JLabel jLabel49;
//    private javax.swing.JLabel jLabel5;
//    private javax.swing.JLabel jLabel6;
//    private javax.swing.JLabel jLabel7;
//    private javax.swing.JLabel jLabel8;
//    private javax.swing.JLabel jLabel9;
//    private javax.swing.JPanel jPanel1;
//    private javax.swing.JPanel jPanel10;
//    private javax.swing.JPanel jPanel11;
//    private javax.swing.JPanel jPanel12;
//    private javax.swing.JPanel jPanel13;
//    private javax.swing.JPanel jPanel14;
//    private javax.swing.JPanel jPanel15;
//    private javax.swing.JPanel jPanel17;
//    private javax.swing.JPanel jPanel2;
//    private javax.swing.JPanel jPanel22;
//    private javax.swing.JPanel jPanel3;
//    private javax.swing.JPanel jPanel4;
//    private javax.swing.JPanel jPanel5;
//    private javax.swing.JPanel jPanel6;
//    private javax.swing.JPanel jPanel7;
//    private javax.swing.JPanel jPanel8;
//    private javax.swing.JPanel jPanel9;
//    private javax.swing.JScrollPane jScrollPane1;
//    private javax.swing.JTextField jTextField1;
//    private javax.swing.JPanel key;
//    private javax.swing.JComboBox keyMask;
//    private javax.swing.JTextField keyStatusField;
//    private java.awt.Label label1;
//    private javax.swing.JPanel lcd;
//    private javax.swing.JPanel leftFingersList;
//    private javax.swing.JPanel modeLED;
//    private javax.swing.JButton modeLEDoffBtn;
//    private javax.swing.JButton modeLEDonBtn;
//    private javax.swing.JPanel optionsTab;
//    private javax.swing.JComboBox overlayCrossColor;
//    private javax.swing.JTextField overlayCrossDx;
//    private javax.swing.JTextField overlayCrossDy;
//    private javax.swing.JTextField overlayCrossWidth;
//    private javax.swing.JTextField overlayCrossX;
//    private javax.swing.JTextField overlayCrossY;
//    private javax.swing.JComboBox overlayLineColor;
//    private javax.swing.JTextField overlayLineWidth;
//    private javax.swing.JTextField overlayLineX1;
//    private javax.swing.JTextField overlayLineX2;
//    private javax.swing.JTextField overlayLineY1;
//    private javax.swing.JTextField overlayLineY2;
//    private javax.swing.JComboBox overlayQuadColor;
//    private javax.swing.JTextField overlayQuadWidth;
//    private javax.swing.JTextField overlayQuadX1;
//    private javax.swing.JTextField overlayQuadX2;
//    private javax.swing.JTextField overlayQuadX3;
//    private javax.swing.JTextField overlayQuadX4;
//    private javax.swing.JTextField overlayQuadY1;
//    private javax.swing.JTextField overlayQuadY2;
//    private javax.swing.JTextField overlayQuadY3;
//    private javax.swing.JTextField overlayQuadY4;
//    private javax.swing.JPanel overlayTab;
//    private javax.swing.JComboBox overlayTextAlign;
//    private javax.swing.JComboBox overlayTextColor;
//    private javax.swing.JTextField overlayTextCont;
//    private javax.swing.JComboBox overlayTextSize;
//    private javax.swing.JTextField overlayTextX;
//    private javax.swing.JTextField overlayTextY;
//    private javax.swing.JCheckBox postProcContrastCheck;
//    private javax.swing.JCheckBox postProcNoiseCheck;
//    private javax.swing.JRadioButton prevCallbackBtn;
//    private javax.swing.JPanel previewPanel;
//    private javax.swing.JButton readKeyBtn;
//    private javax.swing.JTextField reductionLevel;
//    private javax.swing.JButton resetLDCBtn;
//    private javax.swing.JPanel rightFingersList;
//    private javax.swing.JComboBox rollDirectionOpt;
//    private javax.swing.JComboBox rollProfileOpt;
//    private javax.swing.JTextField rollTimeoutVal;
//    private javax.swing.JComboBox selBeepType;
//    private javax.swing.JComboBox selCaptDir;
//    private javax.swing.JComboBox selFingerLED;
//    private javax.swing.JComboBox selLEDCol;
//    private javax.swing.JComboBox selMinFingerCount;
//    private javax.swing.JComboBox selModeLED;
//    private javax.swing.JComboBox selStatusLED;
//    private javax.swing.JComboBox selectDevice;
//    private javax.swing.JComboBox selectMode;
//    private javax.swing.JComboBox selectResult;
//    private javax.swing.JComboBox selectTestType;
//    private javax.swing.JButton selfTestBtn;
//    private javax.swing.JPanel seltTest;
//    private javax.swing.JComboBox sensitivity;
//    private javax.swing.JPanel seqCheckPane;
//    private javax.swing.ButtonGroup seqModeGroup;
//    private javax.swing.JList seqTargetList;
//    private javax.swing.JButton setLFDlevelBtn;
//    private javax.swing.JButton setRollCaptOptionBtn;
//    private javax.swing.JButton showCrossBtn;
//    private javax.swing.JButton showLineBtn;
//    private javax.swing.JButton showQuadBtn;
//    private javax.swing.JButton showTextBtn;
//    private javax.swing.JButton startCaptureBtn;
//    private javax.swing.JLabel statusField;
//    private javax.swing.JPanel statusLED;
//    private javax.swing.JButton statusLEDoffBtn;
//    private javax.swing.JButton statusLEDonBtn;
//    private javax.swing.JButton stopCaptureBtn;
//    private javax.swing.JButton takeAutoCaptureBtn;
//    private javax.swing.JButton takeCaptureBtn;
//    private javax.swing.JPanel wav;
//    // End of variables declaration//GEN-END:variables
//}